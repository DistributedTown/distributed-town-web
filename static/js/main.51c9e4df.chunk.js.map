{"version":3,"sources":["utils/to-base-64.ts","api/textile-bucket.api.ts","../node_modules/@skill-wallet/auth/dist/esm lazy /^/.*/.entry/.js$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","store/store.model.ts","auth/Web3Provider.tsx","auth/auth.reducer.ts","auth/Web3jsComponent.tsx","store/ui-reducer.ts","components/snackbar.tsx","components/logs-dialog.tsx","pages/community/community.tsx","store/status.ts","pages/community/join/base/join-base.tsx","utils/error-parser.ts","pages/community/join/store/join.api.ts","pages/community/join/store/join.reducer.ts","pages/community/join/categories/categories.tsx","pages/community/join/skills/skill-card.tsx","pages/community/join/skills/skills.tsx","api/skillwallet.api.ts","pages/community/join/store/model.ts","pages/community/join/communities/community-card.tsx","api/model.ts","utils/parse-smart-contact-error.ts","api/ethereum-network.api.ts","utils/async-poller.ts","auth/connector.ts","pages/community/join/communities/claim-membership-handlers.tsx","pages/community/join/communities/claim-membership-dialog.tsx","pages/community/join/communities/community-credits.tsx","pages/community/join/communities/communities.tsx","pages/community/join/user-info/user-info.tsx","pages/community/join/join.tsx","pages/get-started/get-started.tsx","App.tsx","reportWebVitals.ts","store/store.ts","index.tsx"],"names":["toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","isBase64","str","trim","btoa","atob","err","base64toFile","dataurl","filename","Error","split","metadata","base64","mime","match","bstr","n","length","u8arr","Uint8Array","charCodeAt","File","type","keyInfo","key","process","secret","uploadImageToTextileBucket","content","a","Buckets","withKeyInfo","buckets","getOrCreate","root","pushPath","links","path","generateTextileBucketUrl","image","arrayBuffer","buf","Buffer","from","JSON","stringify","map","webpackAsyncContext","req","__webpack_require__","o","then","e","code","ids","id","keys","Object","module","exports","useAppDispatch","useDispatch","getLibrary","provider","library","EthersWeb3Provider","pollingInterval","Web3Provider","children","initialState","isAutheticated","web3jsInstance","userAddress","authSlice","createSlice","name","reducers","setAuthenticated","state","action","payload","setWeb3jsInstance","setUserAddress","resetAuthState","actions","Web3jsComponent","useWeb3React","active","connector","dispatch","useSelector","auth","useEffect","getProvider","instance","Web3","catch","console","log","eth","getAccounts","accounts","snackbar","open","message","severity","duration","logs","uiSlice","addLog","Array","isArray","push","openSnackbar","closeSnackbar","resetUIState","Alert","React","forwardRef","props","ref","elevation","variant","SWSnackbar","ui","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","sx","width","LogsDialog","fullScreen","dialogSize","minWidth","minHeight","Dialog","DialogContent","bgcolor","display","justifyContent","alignItems","flexDirection","index","Typography","color","textAlign","pb","component","Topic","height","ResultState","Community","to","JoinBaseLayout","left","right","prevBtn","nextBtn","status","className","largeDevice","useMediaQuery","theme","breakpoints","up","Box","p","m","gridGap","orientation","Loading","CircularProgress","boxShadow","ErrorParser","errResponse","response","data","getCategories","setTimeout","getSkills","categoryId","axios","get","encodeURIComponent","res","categories","getCommunties","fetchCategories","createAsyncThunk","fetchSkills","fetchCommunities","userInfo","avatar","category","entities","selectedCategory","Idle","community","communitySelectedCategory","selectedCommunityName","skills","skillSelectedCategory","selectedSkills","joinCommunitySlice","updateName","updateAvatarUrl","selectCategory","selectCommunity","updateSkill","skill","findIndex","x","splice","toggleSkill","xp","resetJoinCommunityState","extraReducers","builder","addCase","pending","fulfilled","rejected","Failed","getCommunity","createSelector","x1","joinCommunity","find","getFormattedSkills","reduce","prev","curr","value","getCredits","entity","some","s","credits","toString","getSkillCredits","percentage","Categories","small","down","mobile","mobileStartText","List","padding","gridTemplateColumns","gridAutoRows","ListItem","disablePadding","whiteSpace","overflow","textOverflow","onClick","startIcon","label","Link","disabled","endIcon","SkillCard","Card","CardContent","flex","pl","pr","currentSkill","Accordion","disableGutters","square","expanded","AccordionSummary","AccordionDetails","align","Badge","badgeContent","Tooltip","title","arrow","fontSize","position","Stack","spacing","direction","mb","Slider","valueLabelDisplay","step","marks","min","max","defaultValue","onChangeCommitted","_","borderRadius","Skills","subCat","mt","skillWalletAbi","inputs","internalType","stateMutability","anonymous","indexed","outputs","communityAbi","NoEventException","this","ClaimMembershipErrorTypes","getSkillWalletDescription","getSkillWalletAddress","claimCommunityMembershipContract","communityAddress","ethers","providers","window","ethereum","signer","getSigner","skillWalletAddress","contract","Contract","claim","claimTx","wait","claimTransactionResult","events","claimedEvent","event","args","getTokenIdContract","skillwalletAddress","isSkillWalletRegistered","selectedAddress","getSkillWalletIdByOwner","tokenId","executeCommunityContract","url","joinNewMember","toWei","createTx","communityTransactionResult","memberJoinedEvent","communityCredits","hasPendingAuthentication","address","fetch","method","json","generateNonce","nonce","CommunityCard","NonceActions","onSelect","inactive","members","totalMembersAllowed","CardActionArea","CardHeader","py","Avatar","src","subheader","px","scarcityScore","pt","description","ParseSWErrorMessage","skillWalletMsg","switchToEtheremNetwork","request","params","chainId","chainName","nativeCurrency","symbol","decimals","rpcUrls","blockExplorerUrls","ms","asyncPoll","fn","fnCondition","maxRetries","injected","InjectedConnector","supportedChainIds","DialogLoadingMessage","subtitle","onCancel","DialogErrorMessage","DialogAdditionalActionNeeded","actionLabel","handleAdditionalAction","OnClaimMembershipHandlers","setDialogContent","onEthConnection","activate","isAuthorized","isConnected","test","RetryNetwork","onEthNetworkChange","isCorrectNetwork","onTextileBucket","metadataJson","RetryTextile","onJoinMembership","buckerUrl","String","includes","AlreadyMember","SkillWalletNotActivated","SkillWalletNotClaimed","RetryJoin","onClaimMembership","hasJoinedCommunity","AlreadyClaimed","RetryClaim","onGetTokenId","RetryTokenId","onQRCodeGenerate","Activate","logoWidth","logoHeight","bgColor","size","marginTop","RetryNonce","onAuthenticate","condition","hasPendingAuth","RetryAuth","ClaimMembershipDialog","dialogContent","NoBorderLinearProgress","styled","LinearProgress","border","palette","background","paper","linearProgressClasses","colorPrimary","backgroundColor","bar","primary","main","CommunityCredits","totalCredits","creditSkills","paddingLeft","Number","ml","mr","Communities","extraSmall","selectedCommunity","formattedSkills","useState","setOpen","setTokenId","setNonce","claimMembership","properties","username","bucketUrl","member","isAuthenticated","UserInfo","debouncedChangeHandler","useMemo","debounce","target","cancel","TextField","autoFocus","inputProps","maxLength","onChange","helperText","initialPreviewUrl","fileChange","Join","GetStarted","svgString","renderToStaticMarkup","Home","style","LoadingMessage","PrivateRoutes","AuthRoutes","exact","originalConsoleError","withRouter","isLoading","setLoading","logInitialized","setLogInitialized","apply","arguments","onSWLogin","defineCustomElements","addEventListener","timeout","clearTimeout","removeEventListener","menuItems","href","icon","SvgIcon","JoinSelSvg","localStorage","removeItem","history","location","reload","top","visibility","allowCreateNewUser","backgroundUrl","drawer","sidebarTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","persistConfig","storage","stateReconciler","autoMergeLevel2","blacklist","combineReducers","joinCommunitySliceReducer","authSliceReducer","uiSliceReducer","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","concat","logger","reducer","persistor","persistStore","createTheme","components","MuiUseMediaQuery","defaultProps","noSsr","MuiDialogContent","styleOverrides","borderStyle","borderWidth","borderColor","values","xs","sm","md","lg","xl","text","secondary","shape","typography","fontFamily","join","ReactDOM","render","StyledEngineProvider","injectFirst","ThemeProvider","basename","document","getElementById"],"mappings":"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","file":"static/js/main.51c9e4df.chunk.js","sourcesContent":["export const toBase64 = (file: File) => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n};\r\n\r\nexport const isBase64 = (str: string) => {\r\n  if (str === '' || str.trim() === '') {\r\n    return false;\r\n  }\r\n  try {\r\n    return btoa(atob(str)) === str;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const base64toFile = (dataurl = '', filename: string) => {\r\n  if (!dataurl) {\r\n    throw new Error('No content was provided');\r\n  }\r\n  const [metadata, base64] = dataurl.split(',');\r\n  const mime = metadata.match(/:(.*?);/)[1];\r\n\r\n  if (!isBase64(base64)) {\r\n    throw new Error('Content provided is not of base64');\r\n  }\r\n  const bstr = atob(base64);\r\n  let n = bstr.length;\r\n  const u8arr = new Uint8Array(n);\r\n\r\n  // eslint-disable-next-line no-plusplus\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n\r\n  return new File([u8arr], filename, { type: mime });\r\n};\r\n","import { base64toFile } from '@dito-utils/to-base-64';\r\nimport { Buckets } from '@textile/hub';\r\nimport { TextileBucketMetadata } from './model';\r\n\r\nconst keyInfo = {\r\n  key: process.env.REACT_APP_PUBLIC_TEXTILE_KEY,\r\n  secret: process.env.REACT_APP_PUBLIC_TEXTILE_SECRET,\r\n};\r\n\r\nexport async function uploadImageToTextileBucket(content: ArrayBuffer) {\r\n  const buckets = await Buckets.withKeyInfo(keyInfo);\r\n  const { root } = await buckets.getOrCreate(process.env.REACT_APP_PUBLIC_BUCKET_NAME);\r\n  if (!root) throw new Error('bucket not created');\r\n  const path = `profile.png`;\r\n  const links = await buckets.pushPath(root.key, path, content);\r\n  return `https://hub.textile.io${links.path.path}`;\r\n}\r\n\r\nexport const generateTextileBucketUrl = async (metadata: TextileBucketMetadata) => {\r\n  const buckets = await Buckets.withKeyInfo(keyInfo);\r\n  const { root } = await buckets.getOrCreate(process.env.REACT_APP_PUBLIC_BUCKET_NAME);\r\n  if (!root) throw new Error('bucket not created');\r\n\r\n  if (metadata.image) {\r\n    const file = base64toFile(metadata.image, 'avatar');\r\n    const arrayBuffer = await file.arrayBuffer();\r\n    metadata.image = await uploadImageToTextileBucket(arrayBuffer);\r\n  }\r\n\r\n  const buf = Buffer.from(JSON.stringify(metadata, null, 2));\r\n  const path = 'metadata.json';\r\n  const links = await buckets.pushPath(root.key, path, buf);\r\n  return `https://hub.textile.io${links.path.path}`;\r\n};\r\n","var map = {\n\t\"./auth-image_11.entry.js\": [\n\t\t754,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 420;\nmodule.exports = webpackAsyncContext;","import { ThunkDispatch, AnyAction } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport store from './store';\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = ThunkDispatch<RootState, any, AnyAction>;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\n","import React from 'react';\r\nimport { Web3ReactProvider } from '@web3-react/core';\r\nimport { Web3Provider as EthersWeb3Provider } from '@ethersproject/providers';\r\n\r\nconst ETHERS_POLLING_INTERVAL = 1000;\r\n\r\nconst getLibrary = (provider: any) => {\r\n  const library = new EthersWeb3Provider(provider);\r\n  library.pollingInterval = ETHERS_POLLING_INTERVAL;\r\n  return library;\r\n};\r\n\r\ninterface Web3ProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst Web3Provider: React.FC<Web3ProviderProps> = ({ children }) => {\r\n  return <Web3ReactProvider getLibrary={getLibrary}>{children}</Web3ReactProvider>;\r\n};\r\n\r\nexport default Web3Provider;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport Web3 from 'web3';\r\n\r\nexport interface AuthState {\r\n  isAutheticated: boolean;\r\n  web3jsInstance: Web3;\r\n  userAddress: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isAutheticated: false,\r\n  web3jsInstance: null,\r\n  userAddress: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setAuthenticated(state, action) {\r\n      state.isAutheticated = action.payload;\r\n    },\r\n    setWeb3jsInstance(state, action) {\r\n      state.web3jsInstance = action.payload;\r\n    },\r\n    setUserAddress(state, action) {\r\n      state.userAddress = action.payload;\r\n    },\r\n    resetAuthState: () => initialState,\r\n  },\r\n});\r\n\r\nexport const { setAuthenticated, setWeb3jsInstance, setUserAddress, resetAuthState } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","import { useEffect } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport Web3 from 'web3';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState, useAppDispatch } from '@dito-store/store.model';\r\nimport { setUserAddress, setWeb3jsInstance } from './auth.reducer';\r\n\r\nconst Web3jsComponent = ({ children }) => {\r\n  const { active, connector } = useWeb3React();\r\n  const dispatch = useAppDispatch();\r\n  const { web3jsInstance } = useSelector((state: RootState) => state.auth);\r\n\r\n  useEffect(() => {\r\n    connector\r\n      ?.getProvider()\r\n      .then((provider) => {\r\n        const instance = new Web3(provider);\r\n        dispatch(setWeb3jsInstance(instance));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [active, connector, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (web3jsInstance === null) {\r\n      return;\r\n    }\r\n\r\n    console.log('web3jsInstance listener');\r\n    (web3jsInstance as Web3).eth.getAccounts((err, accounts: string[]) => {\r\n      if (err) {\r\n        console.error(err);\r\n      } else {\r\n        dispatch(setUserAddress(accounts[0]));\r\n      }\r\n    });\r\n  }, [web3jsInstance, dispatch]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default Web3jsComponent;\r\n","import { AlertColor } from '@mui/material/Alert';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { ActionPayload } from './action-payload';\r\nimport { SnackbarPayload } from './model';\r\n\r\nexport interface UIState {\r\n  snackbar: {\r\n    open: boolean;\r\n    message: string;\r\n    severity: AlertColor;\r\n    duration: number;\r\n  };\r\n  logs: any[];\r\n}\r\n\r\nconst initialState: UIState = {\r\n  snackbar: {\r\n    open: false,\r\n    message: '',\r\n    severity: 'success',\r\n    duration: 2000,\r\n  },\r\n  logs: [],\r\n};\r\n\r\nexport const uiSlice = createSlice({\r\n  name: 'ui',\r\n  initialState,\r\n  reducers: {\r\n    addLog(state, action: ActionPayload<any>) {\r\n      if (Array.isArray(action.payload)) {\r\n        state.logs = [...state.logs, ...action.payload];\r\n      } else {\r\n        state.logs.push(action.payload);\r\n      }\r\n    },\r\n    openSnackbar(state, action: ActionPayload<SnackbarPayload>) {\r\n      state.snackbar.open = true;\r\n      state.snackbar.message = action.payload.message;\r\n      state.snackbar.severity = action.payload.severity || 'success';\r\n      state.snackbar.duration = action.payload.duration || 4000;\r\n    },\r\n    closeSnackbar(state) {\r\n      state.snackbar = {\r\n        ...state.snackbar,\r\n        open: false,\r\n      };\r\n    },\r\n    resetUIState: () => initialState,\r\n  },\r\n});\r\n\r\nexport const { openSnackbar, closeSnackbar, addLog } = uiSlice.actions;\r\n\r\nexport default uiSlice.reducer;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport { RootState } from '@dito-store/store.model';\r\nimport { closeSnackbar } from '@dito-store/ui-reducer';\r\nimport React from 'react';\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function SWSnackbar() {\r\n  const dispatch = useDispatch();\r\n\r\n  const { message, duration, severity, open } = useSelector((state: RootState) => state.ui.snackbar);\r\n\r\n  const handleClose = () => {\r\n    dispatch(closeSnackbar());\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'right',\r\n      }}\r\n      autoHideDuration={duration}\r\n      open={open}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n        {message}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n}\r\n","import { Dialog, DialogContent, Typography } from '@mui/material';\r\n\r\nexport const LogsDialog = ({ open, handleClose, logs, fullScreen = false }: any) => {\r\n  const dialogSize = fullScreen\r\n    ? {}\r\n    : {\r\n        minWidth: '400px',\r\n        minHeight: '400px',\r\n      };\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} fullScreen={fullScreen}>\r\n      <DialogContent\r\n        sx={{\r\n          ...dialogSize,\r\n          bgcolor: 'primary.main',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        {logs.map((log, index) => {\r\n          return (\r\n            <Typography key={index} sx={{ color: 'background.paper', textAlign: 'center', pb: 1 }} component=\"div\" variant=\"h6\">\r\n              {log}\r\n            </Typography>\r\n          );\r\n        })}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { Redirect, Route } from 'react-router-dom';\nimport { DitoLogoSvg } from 'sw-web-shared';\nimport './community.scss';\n\nfunction Topic() {\n  return <DitoLogoSvg width=\"50\" height=\"50\" />;\n}\n\nconst Community = (props) => {\n  const { path } = props.match;\n  return (\n    <>\n      <Redirect from=\"/community\" to={`${path}/skillwallet`} />\n      <Route component={Topic} path={`${path}/skillwallet`} {...props} />\n      <Route component={Topic} path={`${path}/dTown-hall`} {...props} />\n      <Route component={Topic} path={`${path}/notifications`} {...props} />\n      <Route component={Topic} path={`${path}/settings`} {...props} />\n    </>\n  );\n};\n\nexport default Community;\n","// eslint-disable-next-line no-shadow\r\nexport enum ResultState {\r\n  'Idle' = 'Idle',\r\n  'Loading' = 'Loading',\r\n  'Failed' = 'failed',\r\n}\r\n","import { ResultState } from '@dito-store/status';\nimport { Box, CircularProgress, ThemeOptions } from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { SwDivider, SwScrollbar } from 'sw-web-shared';\nimport './join-base.scss';\n\nconst JoinBaseLayout = ({\n  left,\n  right,\n  prevBtn,\n  nextBtn,\n  status,\n  className,\n}: {\n  left: JSX.Element;\n  right: JSX.Element;\n  prevBtn: JSX.Element;\n  nextBtn: JSX.Element;\n  className: string;\n  status: ResultState;\n}) => {\n  const largeDevice = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.up('lg'));\n\n  return (\n    <div className={`sw-join-base-container ${className}`}>\n      <Box\n        sx={{\n          p: 0,\n          m: 0,\n          gridGap: '60px',\n        }}\n        className=\"sw-box\"\n      >\n        {left}\n      </Box>\n      <SwDivider orientation={largeDevice ? 'vertical' : 'horizontal'} />\n      <Box\n        sx={{\n          p: 0,\n          m: 0,\n          gridGap: '20px',\n        }}\n        className=\"sw-box\"\n      >\n        <Box sx={{ width: largeDevice ? '90% !important' : '100%' }} className=\"sw-box-right-inner\">\n          {status === ResultState.Loading ? (\n            <CircularProgress sx={{ color: 'background.paper' }} />\n          ) : !largeDevice ? (\n            right\n          ) : (\n            <SwScrollbar>{right}</SwScrollbar>\n          )}\n        </Box>\n        <Box\n          sx={{ width: largeDevice ? 'calc(90% - 12px) !important' : '100%', boxShadow: !largeDevice ? 2 : 0 }}\n          className=\"sw-box-actions\"\n        >\n          <div className=\"prev-step\">{prevBtn}</div>\n          <div className=\"next-step\">{nextBtn}</div>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default JoinBaseLayout;\n","import { openSnackbar } from '@dito-store/ui-reducer';\r\nimport { AxiosResponse } from 'axios';\r\n\r\nexport const ErrorParser = (error: any, dispatch?: any): string | void => {\r\n  let message = 'Server error';\r\n  try {\r\n    const errResponse = error.response as AxiosResponse<any>;\r\n    if (errResponse && errResponse.status !== 500) {\r\n      message = errResponse.data.error;\r\n    }\r\n  } catch (err) {\r\n    message = 'Server error';\r\n  }\r\n\r\n  if (dispatch) {\r\n    dispatch(openSnackbar({ message, severity: 'error' }));\r\n  }\r\n  throw new Error(error);\r\n};\r\n","import axios from 'axios';\nimport { Category, CommunityCategory, SkillCategory } from './model';\n\nexport const getCategories = async (): Promise<Category[]> =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve([\n        {\n          id: 0,\n          name: 'Management',\n        },\n        {\n          id: 1,\n          name: 'Network Design',\n        },\n        {\n          id: 2,\n          name: 'Training & Sport',\n        },\n        {\n          id: 3,\n          name: 'Web Dev',\n        },\n        {\n          id: 4,\n          name: 'DeFi',\n        },\n        {\n          id: 5,\n          name: 'Tokenomics',\n        },\n        {\n          id: 6,\n          name: 'Painting',\n        },\n        {\n          id: 7,\n          name: 'Consesus',\n        },\n        {\n          id: 8,\n          name: 'Photography',\n        },\n        {\n          id: 9,\n          name: 'Community',\n        },\n        {\n          id: 10,\n          name: 'Governance',\n        },\n        {\n          id: 11,\n          name: 'Teaching',\n        },\n        {\n          id: 12,\n          name: 'Architecture',\n        },\n        {\n          id: 13,\n          name: 'Frontend Dev',\n        },\n        {\n          id: 14,\n          name: 'Gardening',\n        },\n\n        {\n          id: 15,\n          name: 'Mobile Dev',\n        },\n        {\n          id: 16,\n          name: 'Video-Making',\n        },\n        {\n          id: 17,\n          name: 'Legal',\n        },\n        {\n          id: 18,\n          name: 'Smart Contracts',\n        },\n        {\n          id: 19,\n          name: 'Game Theory',\n        },\n        {\n          id: 20,\n          name: 'Householding',\n        },\n        {\n          id: 21,\n          name: 'Backend',\n        },\n        {\n          id: 22,\n          name: 'Blockchain',\n        },\n      ]);\n    }, 2000);\n  });\n\nexport const getSkills = async (categoryId: string): Promise<SkillCategory[]> => {\n  return axios\n    .get(`${process.env.REACT_APP_PUBLIC_API_URL}/api/skill?skill=${encodeURIComponent(categoryId)}`)\n    .then((res) => res.data)\n    .then(({ categories }) => categories)\n    .catch(() => []);\n};\n\nexport const getCommunties = async (categoryId: string): Promise<CommunityCategory[]> => {\n  return axios\n    .get(`${process.env.REACT_APP_PUBLIC_API_URL}/api/community?category=${encodeURIComponent(categoryId)}`)\n    .then((res) => res.data);\n};\n","import { TextileBucketSkillsMetadata } from 'src/api/model';\r\nimport { ResultState } from '@dito-store/status';\r\nimport { createSlice, createAsyncThunk, createSelector } from '@reduxjs/toolkit';\r\n\r\nimport { ErrorParser } from '@dito-utils/error-parser';\r\nimport { getCategories, getCommunties, getSkills } from './join.api';\r\nimport { Category, CommunityCategory, SkillCategory } from './model';\r\n\r\ninterface Skill {\r\n  skill: string;\r\n  xp: number;\r\n}\r\n\r\nexport interface JoinCommunityState {\r\n  userInfo: {\r\n    name: string;\r\n    avatar: string;\r\n  };\r\n  category: {\r\n    entities: Category[];\r\n    selectedCategory: string;\r\n    status: ResultState;\r\n  };\r\n  community: {\r\n    entities: CommunityCategory[];\r\n    communitySelectedCategory: string;\r\n    selectedCommunityName: string;\r\n    status: ResultState;\r\n  };\r\n  skills: {\r\n    entities: SkillCategory[];\r\n    skillSelectedCategory: string;\r\n    selectedSkills: Skill[];\r\n    status: ResultState;\r\n  };\r\n}\r\n\r\nexport const fetchCategories = createAsyncThunk('category/entities', async () => getCategories());\r\nexport const fetchSkills = createAsyncThunk('skills/entities', async (categoryId: string) => getSkills(categoryId));\r\nexport const fetchCommunities = createAsyncThunk('community/entities', async (categoryId: string, { dispatch }) => {\r\n  try {\r\n    return await getCommunties(categoryId);\r\n  } catch (error) {\r\n    return ErrorParser(error, dispatch);\r\n  }\r\n});\r\n\r\nconst initialState: JoinCommunityState = {\r\n  userInfo: {\r\n    name: null,\r\n    avatar: null,\r\n  },\r\n  category: {\r\n    entities: [],\r\n    selectedCategory: null,\r\n    status: ResultState.Idle,\r\n  },\r\n  community: {\r\n    entities: [],\r\n    communitySelectedCategory: null,\r\n    selectedCommunityName: null,\r\n    status: ResultState.Idle,\r\n  },\r\n  skills: {\r\n    skillSelectedCategory: null,\r\n    entities: [],\r\n    selectedSkills: [],\r\n    status: ResultState.Idle,\r\n  },\r\n};\r\n\r\nexport const joinCommunitySlice = createSlice({\r\n  name: 'joinCommunity',\r\n  initialState,\r\n  reducers: {\r\n    updateName(state, action) {\r\n      state.userInfo.name = action.payload;\r\n    },\r\n    updateAvatarUrl(state, action) {\r\n      state.userInfo.avatar = action.payload;\r\n    },\r\n    selectCategory(state, action) {\r\n      state.category.selectedCategory = action.payload;\r\n    },\r\n    selectCommunity(state, action) {\r\n      state.community.selectedCommunityName = action.payload;\r\n    },\r\n    updateSkill(state, action) {\r\n      const { skill } = action.payload;\r\n      const index = state.skills.selectedSkills.findIndex((x) => x.skill === skill);\r\n      state.skills.selectedSkills.splice(index, 1, action.payload);\r\n    },\r\n    toggleSkill(state, action) {\r\n      const index = state.skills.selectedSkills.findIndex((x) => x.skill === action.payload);\r\n      if (index === -1) {\r\n        state.skills.selectedSkills = [\r\n          ...state.skills.selectedSkills,\r\n          {\r\n            skill: action.payload,\r\n            xp: 0,\r\n          },\r\n        ];\r\n      } else {\r\n        state.skills.selectedSkills.splice(index, 1);\r\n      }\r\n    },\r\n    resetJoinCommunityState: () => initialState,\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchCategories.pending, (state) => {\r\n        state.category.status = ResultState.Loading;\r\n      })\r\n      .addCase(fetchCategories.fulfilled, (state, action) => {\r\n        state.category.entities = action.payload as any[];\r\n        state.category.status = ResultState.Idle;\r\n      })\r\n      .addCase(fetchSkills.pending, (state) => {\r\n        state.skills.selectedSkills = [];\r\n        state.skills.status = ResultState.Loading;\r\n      })\r\n      .addCase(fetchSkills.fulfilled, (state, action) => {\r\n        state.skills.entities = action.payload as any[];\r\n        state.skills.skillSelectedCategory = state.category.selectedCategory;\r\n        state.skills.status = ResultState.Idle;\r\n      })\r\n      .addCase(fetchCommunities.pending, (state) => {\r\n        state.community.status = ResultState.Loading;\r\n      })\r\n      .addCase(fetchCommunities.fulfilled, (state, action) => {\r\n        state.community.entities = action.payload as any[];\r\n        state.community.communitySelectedCategory = state.category.selectedCategory;\r\n        state.community.status = ResultState.Idle;\r\n      })\r\n      .addCase(fetchCommunities.rejected, (state) => {\r\n        state.community.entities = [];\r\n        state.community.communitySelectedCategory = null;\r\n        state.community.status = ResultState.Failed;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { selectCategory, resetJoinCommunityState, toggleSkill, updateSkill, selectCommunity, updateAvatarUrl, updateName } =\r\n  joinCommunitySlice.actions;\r\n\r\nexport const getCommunity = createSelector(selectCommunity, (x1) => {\r\n  const { entities, selectedCommunityName } = x1.payload.joinCommunity.community;\r\n  return entities.find((e) => e.name === selectedCommunityName);\r\n});\r\n\r\nexport const getFormattedSkills = createSelector(updateSkill, toggleSkill, (x1): TextileBucketSkillsMetadata[] => {\r\n  const { selectedSkills } = x1.payload.joinCommunity.skills;\r\n  return selectedSkills.reduce((prev: TextileBucketSkillsMetadata[], curr: Skill) => {\r\n    return [\r\n      ...prev,\r\n      {\r\n        name: curr.skill,\r\n        value: curr.xp,\r\n      },\r\n    ];\r\n  }, []);\r\n});\r\n\r\nexport const getCredits = createSelector(updateSkill, toggleSkill, (x1): string => {\r\n  const { selectedSkills, entities } = x1.payload.joinCommunity.skills;\r\n  const totalSkillCredits = selectedSkills.reduce((prev: number, curr: Skill) => {\r\n    const entity = entities.find(({ skills }) => skills.some((s) => s === curr.skill));\r\n    prev += (entity?.credits || 0) * curr.xp;\r\n    return prev;\r\n  }, 0);\r\n  return (totalSkillCredits + 2000).toString();\r\n});\r\n\r\nexport const getSkillCredits = createSelector(updateSkill, toggleSkill, (x1): string => {\r\n  const { selectedSkills, entities } = x1.payload.joinCommunity.skills;\r\n  return selectedSkills.reduce((prev: any[], curr: Skill) => {\r\n    const entity = entities.find(({ skills }) => skills.some((s) => s === curr.skill));\r\n    prev = [\r\n      ...prev,\r\n      {\r\n        percentage: (curr.xp / 10) * 100,\r\n        name: curr.skill,\r\n        credits: (entity?.credits || 0) * curr.xp,\r\n      },\r\n    ];\r\n    return prev;\r\n  }, []);\r\n});\r\n\r\nexport default joinCommunitySlice.reducer;\r\n","import HelpOutlineIcon from '@mui/icons-material/HelpOutline';\r\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\r\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { Box, List, ListItem, ThemeOptions, Typography } from '@mui/material';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { DitoLogoSvg, SwButton, SwQuote } from 'sw-web-shared';\r\n\r\nimport { RootState } from '@dito-store/store.model';\r\n\r\nimport { ResultState } from '@dito-store/status';\r\nimport JoinBaseLayout from '../base/join-base';\r\nimport { fetchCategories, selectCategory } from '../store/join.reducer';\r\n\r\nimport './categories.scss';\r\n\r\nconst Categories = () => {\r\n  const largeDevice = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.up('lg'));\r\n  const small = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.down('md'));\r\n\r\n  const dispatch = useDispatch();\r\n  const { entities, status, selectedCategory } = useSelector((state: RootState) => state.joinCommunity.category);\r\n  const userInfo = useSelector((state: RootState) => state.joinCommunity.userInfo);\r\n\r\n  useEffect(() => {\r\n    if (!entities.length && userInfo?.name && userInfo?.avatar) {\r\n      dispatch(fetchCategories());\r\n    }\r\n  }, [dispatch, entities, userInfo]);\r\n\r\n  return (\r\n    <JoinBaseLayout\r\n      status={status}\r\n      className=\"sw-categories-container\"\r\n      left={\r\n        <>\r\n          <Box className=\"sw-box-logo\">\r\n            <DitoLogoSvg width={largeDevice ? '100px' : '80px'} />\r\n          </Box>\r\n\r\n          <SwQuote mobile={small} mobileStartText={<p>Have you ever thought...</p>}>\r\n            <>\r\n              <p>\r\n                Have you ever thought, <br />\r\n                \"I would like to contribute, but ...\"\r\n              </p>\r\n              <p className=\"mt-4 mb-4\">Distributed Town (DiTo) lets you create or join a community with one click.</p>\r\n\r\n              <p>Just select what you are best at - and we will match with the best communities that need you the most.</p>\r\n            </>\r\n          </SwQuote>\r\n        </>\r\n      }\r\n      right={\r\n        <div className=\"sw-category-wrapper\">\r\n          <Typography sx={{ color: 'background.paper', textAlign: 'center', pb: 2 }} component=\"div\" variant=\"h6\">\r\n            Pick a category\r\n          </Typography>\r\n\r\n          {userInfo?.name && userInfo?.avatar ? (\r\n            <List\r\n              sx={{\r\n                display: 'grid',\r\n                width: '100%',\r\n                gridGap: '15px',\r\n                padding: 0,\r\n                gridTemplateColumns: 'repeat(auto-fit, minmax(175px, 1fr))',\r\n                gridAutoRows: 'minmax(60px, auto)',\r\n              }}\r\n            >\r\n              {entities.map(({ id, name }) => (\r\n                <ListItem key={id} sx={{ height: '45px' }} disablePadding>\r\n                  <SwButton\r\n                    sx={{\r\n                      height: '100%',\r\n                      whiteSpace: 'nowrap',\r\n                      overflow: 'hidden',\r\n                      textOverflow: 'ellipsis',\r\n                      width: '100%',\r\n                    }}\r\n                    onClick={() => dispatch(selectCategory(name))}\r\n                    className={selectedCategory === name ? 'active-link' : ''}\r\n                    startIcon={<HelpOutlineIcon />}\r\n                    label={name}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          ) : (\r\n            <Typography\r\n              className=\"no-item-selected\"\r\n              sx={{ color: 'background.paper', textAlign: 'center', pb: 2 }}\r\n              component=\"div\"\r\n              variant=\"h6\"\r\n            >\r\n              Personal information was not provided, go back to provide it!\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      }\r\n      prevBtn={<SwButton startIcon={<NavigateBeforeIcon />} component={Link} to=\"/join-community/user-info\" label=\"Prev\" />}\r\n      nextBtn={\r\n        <SwButton\r\n          disabled={selectedCategory === null || status === ResultState.Loading || !(userInfo?.name && userInfo?.avatar)}\r\n          endIcon={<NavigateNextIcon />}\r\n          component={Link}\r\n          to=\"/join-community/skills\"\r\n          label={small ? 'Next' : 'Next: Pick your skills'}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import {\n  Card,\n  CardContent,\n  Typography,\n  List,\n  ListItem,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Badge,\n  Tooltip,\n  Stack,\n  Slider,\n  Box,\n} from '@mui/material';\nimport { SwButton } from 'sw-web-shared';\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline';\nimport './skill-card.scss';\n\nfunction SkillCard({ category, skills, credits, selectedSkills, toggleSkill, updateSkill }) {\n  return (\n    <Card className=\"sw-skill-card\" sx={{ display: 'flex' }}>\n      <Box sx={{ display: 'flex', flexDirection: 'column', width: '100%' }}>\n        <CardContent sx={{ flex: '1 0 auto' }}>\n          <Typography component=\"div\" variant=\"h6\">\n            {category} <small>({credits} Credits)</small>\n          </Typography>\n        </CardContent>\n        <Box\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            pl: '16px',\n            pr: '16px',\n          }}\n        >\n          <List className=\"sw-skill-list\">\n            {skills.map((skill: string, index: number) => {\n              const currentSkill = selectedSkills.find((x) => x.skill === skill);\n              return (\n                <ListItem key={index} sx={{ minHeight: '45px', alignItems: 'flex-start' }} disablePadding>\n                  <Accordion disableGutters elevation={0} square sx={{ p: 0, m: 0, width: '100%' }} expanded={!!currentSkill}>\n                    <AccordionSummary>\n                      <SwButton\n                        label={skill}\n                        sx={{\n                          height: '100%',\n                          whiteSpace: 'nowrap',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis',\n                          width: '100%',\n                        }}\n                        disabled={selectedSkills.length === 3 && !currentSkill}\n                        className={currentSkill ? 'active-link' : ''}\n                        onClick={() => toggleSkill(skill)}\n                      />\n                    </AccordionSummary>\n                    <AccordionDetails sx={{ padding: '16px' }}>\n                      <Typography color=\"primary.main\" component=\"div\" variant=\"subtitle1\" align=\"center\">\n                        <Badge\n                          sx={{\n                            padding: '0 8px',\n                          }}\n                          badgeContent={\n                            <Tooltip title=\"Tell your community about the Experience you have.\" arrow>\n                              <HelpOutlineIcon\n                                sx={{\n                                  fontSize: '1.2rem',\n                                  position: 'absolute',\n                                }}\n                              />\n                            </Tooltip>\n                          }\n                        >\n                          Your XP Level\n                        </Badge>\n                      </Typography>\n\n                      <Stack spacing={2} direction=\"row\" sx={{ mb: 1 }} alignItems=\"center\">\n                        <Typography color=\"primary.main\" component=\"div\" variant=\"subtitle2\">\n                          1\n                        </Typography>\n                        <Slider\n                          key={`slider-${currentSkill?.xp}`}\n                          valueLabelDisplay=\"auto\"\n                          step={1}\n                          marks\n                          min={1}\n                          max={10}\n                          defaultValue={currentSkill?.xp}\n                          onChangeCommitted={(_, value: number) => {\n                            updateSkill({\n                              xp: value,\n                              skill,\n                            });\n                          }}\n                          sx={{\n                            '& .MuiSlider-thumb': {\n                              borderRadius: '0px',\n                            },\n                          }}\n                        />\n                        <Typography color=\"primary.main\" component=\"div\" variant=\"subtitle2\">\n                          10\n                        </Typography>\n                      </Stack>\n                    </AccordionDetails>\n                  </Accordion>\n                </ListItem>\n              );\n            })}\n          </List>\n        </Box>\n      </Box>\n    </Card>\n  );\n}\n\nexport default SkillCard;\n","import NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { Box, ThemeOptions, Typography } from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { DitoLogoSvg, SwButton, SwQuote } from 'sw-web-shared';\n\nimport { RootState } from '@dito-store/store.model';\n\nimport { ResultState } from '@dito-store/status';\nimport JoinBaseLayout from '../base/join-base';\nimport { fetchSkills, toggleSkill, updateSkill } from '../store/join.reducer';\nimport './skills.scss';\nimport SkillCard from './skill-card';\n\nconst Skills = () => {\n  const dispatch = useDispatch();\n  const largeDevice = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.up('lg'));\n  const small = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.down('md'));\n  const { entities, status, selectedSkills, skillSelectedCategory } = useSelector((state: RootState) => state.joinCommunity.skills);\n  const { selectedCategory } = useSelector((state: RootState) => state.joinCommunity.category);\n\n  useEffect(() => {\n    if (selectedCategory && selectedCategory !== skillSelectedCategory) {\n      dispatch(fetchSkills(selectedCategory));\n    }\n  }, [dispatch, skillSelectedCategory, selectedCategory]);\n\n  return (\n    <JoinBaseLayout\n      status={status}\n      className=\"sw-skill-container\"\n      left={\n        <>\n          <Box className=\"sw-box-logo\">\n            <DitoLogoSvg width={largeDevice ? '100px' : '80px'} />\n          </Box>\n          <SwQuote mobile={small} mobileStartText={<p>Have you ever thought...</p>}>\n            <>\n              <p>\n                Have you ever thought, <br />\n                \"I would like to contribute, but ...\"\n              </p>\n              <p className=\"mt-4 mb-4\">Distributed Town (DiTo) lets you create or join a community with one click.</p>\n\n              <p>Just select what you are best at - and we will match with the best communities that need you the most.</p>\n            </>\n          </SwQuote>\n        </>\n      }\n      right={\n        <div className=\"sw-skill-wrapper\">\n          <Typography sx={{ color: 'background.paper', textAlign: 'center', pb: 2 }} component=\"div\" variant=\"h6\">\n            Pick your skills (1-to-3) that you want to offer, & recieve the Credits you deserve!\n          </Typography>\n          {skillSelectedCategory ? (\n            !entities?.length ? (\n              <Typography sx={{ color: 'background.paper', textAlign: 'center', pb: 2, mt: 4 }} component=\"div\" variant=\"h6\">\n                We could not find any skills for {skillSelectedCategory} category, please go back and select a different category!\n              </Typography>\n            ) : (\n              entities.map(({ credits, skills, subCat }) => (\n                <SkillCard\n                  key={subCat}\n                  selectedSkills={selectedSkills}\n                  category={subCat}\n                  credits={credits}\n                  skills={skills}\n                  updateSkill={(skill) => dispatch(updateSkill(skill))}\n                  toggleSkill={(skill) => dispatch(toggleSkill(skill))}\n                />\n              ))\n            )\n          ) : (\n            <Typography\n              className=\"no-item-selected\"\n              sx={{ color: 'background.paper', textAlign: 'center', pb: 2 }}\n              component=\"div\"\n              variant=\"h6\"\n            >\n              No category was selected, go back to select one!\n            </Typography>\n          )}\n        </div>\n      }\n      prevBtn={<SwButton startIcon={<NavigateBeforeIcon />} component={Link} to=\"/join-community/categories\" label=\"Prev\" />}\n      nextBtn={\n        <SwButton\n          disabled={selectedSkills.length === 0 || status === ResultState.Loading}\n          endIcon={<NavigateNextIcon />}\n          component={Link}\n          to=\"/join-community/communities\"\n          label={small ? 'Next' : 'Next: Join your community'}\n        />\n      }\n    />\n  );\n};\n\nexport default Skills;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport { ethers } from 'ethers';\r\nimport { toWei } from 'web3-utils';\r\nimport { CommunityContract, CommunityContractError, CommunityContractResponse, NonceActions } from './model';\r\n\r\nconst skillWalletAbi = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '_linkToken',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: '_oracle',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'approved',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Approval',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'operator',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'bool',\r\n        name: 'approved',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'ApprovalForAll',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes32',\r\n        name: 'id',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'ChainlinkCancelled',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes32',\r\n        name: 'id',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'ChainlinkFulfilled',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'bytes32',\r\n        name: 'id',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'ChainlinkRequested',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'previousOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'OwnershipTransferred',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'skillWalletId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'PubKeyAddedToSkillWallet',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'skillWalletId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'SkillWalletActivated',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'SkillWalletClaimed',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'skillWalletId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'address',\r\n        name: 'newCommunity',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'SkillWalletCommunityChanged',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'skillWalletOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'community',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'skillWalletId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'SkillWalletCreated',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: true,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'Transfer',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'action',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'ValidationFailed',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'nonce',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'action',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'ValidationPassed',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: false,\r\n        internalType: 'bytes32',\r\n        name: 'requestId',\r\n        type: 'bytes32',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'address',\r\n        name: 'caller',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'ValidationRequestIdSent',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'skillWalletId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'activateSkillWallet',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'skillWalletId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'string',\r\n        name: 'pubKey',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    name: 'addPubKeyToSkillWallet',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'approve',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'baseURI',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'claim',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'skillWalletOwner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'string',\r\n        name: 'url',\r\n        type: 'string',\r\n      },\r\n      {\r\n        internalType: 'bool',\r\n        name: 'isClaimable',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'create',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'skillWalletId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'getActiveCommunity',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'community',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'getApproved',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'skillWalletOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'getClaimableSkillWalletId',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'skillWalletId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'getCommunityHistory',\r\n    outputs: [\r\n      {\r\n        internalType: 'address[]',\r\n        name: 'communities',\r\n        type: 'address[]',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'skillWalletOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'getSkillWalletIdByOwner',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getTotalSkillWalletsRegistered',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'operator',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'isApprovedForAll',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: 'requestId',\r\n        type: 'bytes32',\r\n      },\r\n    ],\r\n    name: 'isRequestIdValid',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'skillWalletId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'isSkillWalletActivated',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: 'status',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'skillWalletOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'isSkillWalletClaimable',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: 'status',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'skillWalletOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'isSkillWalletRegistered',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: 'status',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'name',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'operator',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'bytes',\r\n        name: 'data',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    name: 'onERC721Received',\r\n    outputs: [\r\n      {\r\n        internalType: 'bytes4',\r\n        name: '',\r\n        type: 'bytes4',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'owner',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'ownerOf',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'renounceOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'bytes',\r\n        name: '_data',\r\n        type: 'bytes',\r\n      },\r\n    ],\r\n    name: 'safeTransferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'operator',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'bool',\r\n        name: 'approved',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'setApprovalForAll',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'skillWalletClaimers',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'skillWalletToPubKey',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes4',\r\n        name: 'interfaceId',\r\n        type: 'bytes4',\r\n      },\r\n    ],\r\n    name: 'supportsInterface',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'symbol',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'index',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'tokenByIndex',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'owner',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'index',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'tokenOfOwnerByIndex',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'tokenURI',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'totalSupply',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transferFrom',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'newOwner',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'transferOwnership',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: 'signature',\r\n        type: 'string',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'tokenId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'action',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'string[]',\r\n        name: 'stringParams',\r\n        type: 'string[]',\r\n      },\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: 'intParams',\r\n        type: 'uint256[]',\r\n      },\r\n      {\r\n        internalType: 'address[]',\r\n        name: 'addressParams',\r\n        type: 'address[]',\r\n      },\r\n    ],\r\n    name: 'validate',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'bytes32',\r\n        name: '_requestId',\r\n        type: 'bytes32',\r\n      },\r\n      {\r\n        internalType: 'bool',\r\n        name: '_isValid',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    name: 'validationCallback',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n];\r\nconst communityAbi = [\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '_url',\r\n        type: 'string',\r\n      },\r\n      {\r\n        internalType: 'address',\r\n        name: '_addrProvider',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: '_totalMembersAllowed',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'bool',\r\n        name: '_claimableSkillWallets',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'constructor',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: '_member',\r\n        type: 'address',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: '_skillWalletTokenId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        indexed: false,\r\n        internalType: 'uint256',\r\n        name: '_transferredTokens',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'MemberAdded',\r\n    type: 'event',\r\n  },\r\n  {\r\n    anonymous: false,\r\n    inputs: [\r\n      {\r\n        indexed: true,\r\n        internalType: 'address',\r\n        name: '_member',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'MemberLeft',\r\n    type: 'event',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'activeMembersCount',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint16',\r\n        name: '',\r\n        type: 'uint16',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'projectId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'addProjectId',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'member',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'balanceOf',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'ditoCreditsAddr',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'ditoCreditsHolder',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getMemberAddresses',\r\n    outputs: [\r\n      {\r\n        internalType: 'address[]',\r\n        name: '',\r\n        type: 'address[]',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getMembers',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: '',\r\n        type: 'uint256[]',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'projectId',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'getProjectTreasuryAddress',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getProjects',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256[]',\r\n        name: '',\r\n        type: 'uint256[]',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getSkillWalletAddress',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getTemplate',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getTokenId',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'getTreasuryBalance',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'gigsAddr',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'isMember',\r\n    outputs: [\r\n      {\r\n        internalType: 'bool',\r\n        name: '',\r\n        type: 'bool',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'skillWalletTokenId',\r\n        type: 'uint256',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'credits',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'join',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: 'uri',\r\n        type: 'string',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'credits',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'joinNewMember',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'memberAddress',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    name: 'leave',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'memberAddresses',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'metadataUri',\r\n    outputs: [\r\n      {\r\n        internalType: 'string',\r\n        name: '',\r\n        type: 'string',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'scarcityScore',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'skillWalletIds',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'tokenId',\r\n    outputs: [\r\n      {\r\n        internalType: 'uint256',\r\n        name: '',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'to',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transferCredits',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: 'from',\r\n        type: 'address',\r\n      },\r\n      {\r\n        internalType: 'uint256',\r\n        name: 'amount',\r\n        type: 'uint256',\r\n      },\r\n    ],\r\n    name: 'transferToCommunity',\r\n    outputs: [],\r\n    stateMutability: 'nonpayable',\r\n    type: 'function',\r\n  },\r\n  {\r\n    inputs: [],\r\n    name: 'treasuryAddr',\r\n    outputs: [\r\n      {\r\n        internalType: 'address',\r\n        name: '',\r\n        type: 'address',\r\n      },\r\n    ],\r\n    stateMutability: 'view',\r\n    type: 'function',\r\n  },\r\n];\r\n\r\nfunction NoEventException(value: CommunityContractError) {\r\n  this.value = value;\r\n  this.message = 'No event found!';\r\n  // eslint-disable-next-line func-names\r\n  this.toString = function () {\r\n    return this.value + this.message;\r\n  };\r\n}\r\n\r\nexport const getSkillWalletDescription = async () => {\r\n  return 'Universal, self-sovereign IDs tied to skills & contributions rather than personal data.';\r\n};\r\n\r\nexport const getSkillWalletAddress = async (communityAddress = null) => {\r\n  return '0x1e79bE396CE37F7eB43aF0Ef0ffb3124F3fD23eF';\r\n};\r\n\r\nexport const claimCommunityMembershipContract = async (communityAddress: string): Promise<string> => {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const skillWalletAddress = await getSkillWalletAddress(communityAddress);\r\n  const contract = new ethers.Contract(skillWalletAddress, skillWalletAbi, signer);\r\n  const claimTx = await contract.claim();\r\n  const claimTransactionResult = await claimTx.wait();\r\n  const { events } = claimTransactionResult;\r\n  const claimedEvent = events.find((e) => e.event === 'SkillWalletClaimed');\r\n\r\n  if (!claimedEvent) {\r\n    throw new NoEventException({\r\n      code: -32603,\r\n      message: 'Internal JSON-RPC error.',\r\n      data: {\r\n        code: 3,\r\n        data: '',\r\n        message: 'SkillWallet:ClaimEventMissing',\r\n      },\r\n    });\r\n  }\r\n\r\n  return claimedEvent.args;\r\n};\r\n\r\nexport const getTokenIdContract = async (communityAddress: string): Promise<string> => {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n  const skillwalletAddress = await getSkillWalletAddress(communityAddress);\r\n  const contract = new ethers.Contract(skillwalletAddress, skillWalletAbi, signer);\r\n  const isRegistered = await contract.isSkillWalletRegistered(window.ethereum.selectedAddress);\r\n\r\n  if (isRegistered) {\r\n    const tokenId = await contract.getSkillWalletIdByOwner(window.ethereum.selectedAddress);\r\n    return tokenId?.toString();\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const executeCommunityContract = async ({\r\n  communityAddress,\r\n  url,\r\n  credits,\r\n}: CommunityContract): Promise<CommunityContractResponse> => {\r\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n  const signer = provider.getSigner();\r\n\r\n  const contract = new ethers.Contract(communityAddress, communityAbi, signer);\r\n  const createTx = await contract.joinNewMember(url, toWei(credits.toString()));\r\n  const communityTransactionResult = await createTx.wait();\r\n  const { events } = communityTransactionResult;\r\n  const memberJoinedEvent = events.find(({ event }) => event === 'MemberAdded');\r\n\r\n  if (!memberJoinedEvent) {\r\n    throw new NoEventException({\r\n      code: -32603,\r\n      message: 'Internal JSON-RPC error.',\r\n      data: {\r\n        code: 3,\r\n        data: '',\r\n        message: 'SkillWallet:MemberEventMissing',\r\n      },\r\n    });\r\n  }\r\n\r\n  const [userAddress, tokenId, communityCredits] = memberJoinedEvent.args;\r\n  return {\r\n    userAddress,\r\n    tokenId: tokenId?.toString(),\r\n    credits: communityCredits,\r\n  };\r\n};\r\n\r\nexport const hasPendingAuthentication = async (address: string): Promise<{ hasPendingAuth: boolean }> => {\r\n  return fetch(`${process.env.REACT_APP_PUBLIC_SKILL_WALLET_API_URL}/api/skillWallet/hasPendingAuth?address=${address}`, {\r\n    method: 'GET',\r\n  }).then((response) => response.json());\r\n};\r\n\r\nexport const generateNonce = async (action: NonceActions, tokenId: string): Promise<string> => {\r\n  try {\r\n    const response = await fetch(\r\n      `${process.env.REACT_APP_PUBLIC_SKILL_WALLET_API_URL}/api/skillWallet/${tokenId}/nonces?action=${action}`,\r\n      {\r\n        method: 'POST',\r\n      }\r\n    );\r\n    const nonce = await response.json();\r\n    return nonce.nonce;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n","/* eslint-disable no-shadow */\r\n\r\nexport enum ClaimMembershipErrorTypes {\r\n  NoFreeSpots = 'NoFreeSpots',\r\n  AlreadyMember = 'AlreadyMember',\r\n  SkillWalletNotActivated = 'SkillWalletNotActivated',\r\n  SkillWalletNotClaimed = 'SkillWalletNotClaimed',\r\n  RetryJoin = 'RetryJoin',\r\n  RetryNetwork = 'RetryNetwork',\r\n  RetryTextile = 'RetryTextile',\r\n  RetryNonce = 'RetryNonce',\r\n  AlreadyClaimed = 'AlreadyClaimed',\r\n  SkillWalletNotCreated = 'SkillWalletNotCreated',\r\n  RetryClaim = 'RetryClaim',\r\n  RetryAuth = 'RetryAuth',\r\n  RetryTokenId = 'RetryTokenId',\r\n}\r\n\r\nexport interface Category {\r\n  id: number;\r\n  name: string;\r\n  icon?: any;\r\n}\r\n\r\nexport interface SkillCategory {\r\n  credits: number;\r\n  skills: string[];\r\n  subCat: string;\r\n}\r\n\r\nexport interface CommunityCategory {\r\n  name: string;\r\n  members: number;\r\n  scarcityScore: number;\r\n  address: string;\r\n  description: string;\r\n  totalMembersAllowed: number;\r\n  image: string;\r\n}\r\n","import { Card, CardContent, Typography, Box, Avatar, CardHeader, CardActionArea, ThemeOptions, useMediaQuery } from '@mui/material';\nimport { CommunityCategory } from '../store/model';\nimport './community-card.scss';\n\nfunction CommunityCard({\n  community,\n  selectedCommunityName,\n  onSelect,\n}: {\n  community: CommunityCategory;\n  selectedCommunityName: string;\n  onSelect: (communityName: string) => any;\n}) {\n  const inactive = community.members >= community.totalMembersAllowed;\n  const small = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.down('sm'));\n  return (\n    <Card\n      onClick={() => !inactive && onSelect(community.name)}\n      className={`sw-community-card ${selectedCommunityName === community.name ? 'active' : ''} ${inactive ? 'inactive' : ''}`}\n    >\n      <CardActionArea disabled={inactive}>\n        <CardContent sx={{ display: 'flex' }}>\n          <Box sx={{ flex: '1' }}>\n            <CardHeader\n              sx={{\n                boxShadow: 1,\n                bgcolor: inactive ? 'secondary.main' : 'white',\n                py: '8px',\n              }}\n              avatar={<Avatar sx={{ width: 50, height: 50 }} src={community.image} />}\n              title={\n                <Typography variant={small ? 'h6' : 'h5'} color=\"primary.main\">\n                  {community.name}\n                </Typography>\n              }\n              subheader={\n                <div className=\"car-subtitle\">\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    {`Members: ${community.members} / `} <small>{community.totalMembersAllowed}</small>\n                  </Typography>\n                  <Typography sx={{ px: 1 }} variant=\"body1\" color=\"text.secondary\">\n                    |\n                  </Typography>\n                  <Typography variant=\"body1\" color=\"text.secondary\">\n                    {`Scarcity score: ${community.scarcityScore}`}\n                  </Typography>\n                </div>\n              }\n            />\n            <Typography className=\"card-description\" sx={{ pb: 2, pt: 2 }} variant=\"body2\">\n              {community.description}\n            </Typography>\n          </Box>\n\n          <Box className=\"can-accept-in\" sx={{ width: '170px' }}>\n            <Typography sx={{ pb: 2, pt: 2 }} variant=\"body2\">\n              Accepting new diTizens?\n            </Typography>\n            <div className={`toggle-circle ${inactive ? 'not-accepting' : 'accepting'}`}>{inactive ? 'No' : 'Yes'}</div>\n          </Box>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n\nexport default CommunityCard;\n","export interface TextileBucketSkillsMetadata {\r\n  name: string; // skillname\r\n  value: number; // xp\r\n}\r\n\r\nexport interface TextileBucketMetadata {\r\n  name: string;\r\n  description: string;\r\n  image: string;\r\n  properties: {\r\n    username: string;\r\n    skills: TextileBucketSkillsMetadata[];\r\n  };\r\n}\r\n\r\nexport interface CommunityContract {\r\n  communityAddress: string;\r\n  url: string;\r\n  credits: string;\r\n}\r\n\r\nexport interface CommunityContractError {\r\n  code: number;\r\n  message: string;\r\n  data: {\r\n    code: number;\r\n    data: any;\r\n    message: string;\r\n  };\r\n}\r\n\r\nexport interface CommunityContractResponse {\r\n  userAddress: string;\r\n  tokenId: string;\r\n  credits: number;\r\n}\r\n\r\n// eslint-disable-next-line no-shadow\r\nexport enum NonceActions {\r\n  Activate,\r\n  Login,\r\n  CreateGig,\r\n  TakeGig,\r\n  SubmitGig,\r\n  CompleteGig,\r\n}\r\n","export const ParseSWErrorMessage = (error: string) => {\r\n  if (!error) {\r\n    return error;\r\n  }\r\n\r\n  if (typeof error !== 'string') {\r\n    throw new Error('SW error message is not a string!');\r\n  }\r\n\r\n  const [, skillWalletMsg] = error.split('execution reverted:');\r\n  const [, message] = (skillWalletMsg || '').split('SkillWallet:');\r\n  return (message || skillWalletMsg || 'Unknown error').trim();\r\n};\r\n","import { addLog } from '@dito-store/ui-reducer';\r\n\r\nconst timeout = (prom: Promise<any>, time: number) => Promise.race([prom, new Promise((_r, rej) => setTimeout(rej, time))]);\r\n\r\nexport const connectToEthereum = async (dispatch?: any): Promise<boolean> => {\r\n  if (!window.ethereum.selectedAddress) {\r\n    try {\r\n      await timeout(window.ethereum.request({ method: 'eth_requestAccounts' }), 20000);\r\n      return true;\r\n    } catch (error) {\r\n      if (dispatch) {\r\n        dispatch(addLog(JSON.stringify(error)));\r\n      }\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n};\r\n\r\nexport const switchToEtheremNetwork = async (dispatch?: any): Promise<boolean> => {\r\n  try {\r\n    await window.ethereum.request({\r\n      method: 'wallet_switchEthereumChain',\r\n      params: [{ chainId: '0x13881' }],\r\n    });\r\n  } catch (switchError) {\r\n    if (dispatch) {\r\n      dispatch(addLog(JSON.stringify(switchError)));\r\n    }\r\n    if (switchError.code === 4902) {\r\n      try {\r\n        await window.ethereum.request({\r\n          method: 'wallet_addEthereumChain',\r\n          params: [\r\n            {\r\n              chainId: '0x13881', // A 0x-prefixed hexadecimal string\r\n              chainName: 'Mumbai',\r\n              nativeCurrency: {\r\n                name: 'Matic',\r\n                symbol: 'MATIC',\r\n                decimals: 18,\r\n              },\r\n              rpcUrls: ['https://matic-mumbai.chainstacklabs.com', 'https://rpc-mumbai.matic.today'],\r\n              blockExplorerUrls: ['https://mumbai.polygonscan.com/'],\r\n            },\r\n          ],\r\n        });\r\n      } catch (error) {\r\n        if (dispatch) {\r\n          dispatch(addLog(JSON.stringify(error)));\r\n        }\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n};\r\n","/* eslint-disable no-await-in-loop */\r\nconst wait = (ms = 1000) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nexport const asyncPoll = async <T>(fn: () => Promise<T>, fnCondition: (result: T) => boolean, ms = 2000, maxRetries = 10) => {\r\n  let result = await fn();\r\n  while (fnCondition(result) && maxRetries > 0) {\r\n    await wait(ms);\r\n    result = await fn();\r\n    maxRetries = -maxRetries;\r\n  }\r\n  return result;\r\n};\r\n","import { InjectedConnector } from '@web3-react/injected-connector';\r\n\r\nexport const CHAIN_IDS = [\r\n  80001, // Kovan\r\n];\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: CHAIN_IDS });\r\n","import { NonceActions, TextileBucketMetadata } from '@dito-api/model';\r\nimport {\r\n  claimCommunityMembershipContract,\r\n  executeCommunityContract,\r\n  generateNonce,\r\n  getTokenIdContract,\r\n  hasPendingAuthentication,\r\n} from '@dito-api/skillwallet.api';\r\nimport { ParseSWErrorMessage } from '@dito-utils/parse-smart-contact-error';\r\nimport { Box, CircularProgress, Typography } from '@mui/material';\r\nimport { SwButton } from 'sw-web-shared';\r\nimport { QRCode } from 'react-qrcode-logo';\r\nimport { generateTextileBucketUrl } from '@dito-api/textile-bucket.api';\r\nimport { switchToEtheremNetwork } from '@dito-api/ethereum-network.api';\r\nimport { asyncPoll } from '@dito-utils/async-poller';\r\nimport { injected } from '@dito-auth/connector';\r\nimport { addLog } from '@dito-store/ui-reducer';\r\nimport { ClaimMembershipErrorTypes } from '../store/model';\r\n\r\nconst DialogLoadingMessage = ({ message, subtitle = null, onCancel }) => {\r\n  return (\r\n    <>\r\n      <div className=\"sw-join-dialog-content\">\r\n        <CircularProgress sx={{ color: 'text.primary' }} />\r\n        <Typography sx={{ textAlign: 'center', mt: 2 }} component=\"div\" variant=\"h6\">\r\n          {message}\r\n        </Typography>\r\n        <Typography sx={{ color: 'secondary.main', textAlign: 'center', mt: 2 }} component=\"div\" variant=\"body2\">\r\n          {subtitle}\r\n        </Typography>\r\n      </div>\r\n      <SwButton color=\"error\" onClick={onCancel} sx={{ mt: 4 }} label=\"Cancel\" />\r\n    </>\r\n  );\r\n};\r\n\r\nconst DialogErrorMessage = ({ message, subtitle = null, onCancel }) => {\r\n  return (\r\n    <>\r\n      <div className=\"sw-join-dialog-content\">\r\n        <Typography sx={{ textAlign: 'center', mt: 2 }} component=\"div\" variant=\"h6\">\r\n          {message}\r\n        </Typography>\r\n        <Typography sx={{ color: 'secondary.main', textAlign: 'center', mt: 2 }} component=\"div\" variant=\"body2\">\r\n          {subtitle}\r\n        </Typography>\r\n      </div>\r\n      <SwButton color=\"error\" onClick={onCancel} sx={{ mt: 4 }} label=\"Cancel\" />\r\n    </>\r\n  );\r\n};\r\n\r\nconst DialogAdditionalActionNeeded = ({ message, subtitle, actionLabel, handleAdditionalAction, onCancel }) => {\r\n  return (\r\n    <>\r\n      <div className=\"sw-join-dialog-content\">\r\n        <Typography sx={{ textAlign: 'center', mt: 2 }} component=\"div\" variant=\"h6\">\r\n          {message}\r\n        </Typography>\r\n        <Typography sx={{ color: 'secondary.main', textAlign: 'center', mt: 2 }} component=\"div\" variant=\"body2\">\r\n          {subtitle}\r\n        </Typography>\r\n        <SwButton color=\"primary\" onClick={handleAdditionalAction} sx={{ mt: 4, width: '200px', height: '45px' }} label={actionLabel} />\r\n      </div>\r\n      <SwButton color=\"error\" onClick={onCancel} sx={{ mt: 4 }} label=\"Cancel\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const OnClaimMembershipHandlers = (\r\n  dispatch: any,\r\n  setDialogContent: (content: JSX.Element) => void,\r\n  handleClose: () => void,\r\n  handleAdditionalAction: (message: string) => void\r\n) => {\r\n  const onEthConnection = async (activate: (connector: any) => Promise<void>) => {\r\n    setDialogContent(<DialogLoadingMessage message=\"Ensuring ethereum connection ...\" onCancel={handleClose} />);\r\n    await activate(injected);\r\n    const isConnected = await injected.isAuthorized();\r\n    await dispatch(addLog(JSON.stringify({ test: 'test' })));\r\n    if (!isConnected) {\r\n      setDialogContent(\r\n        <>\r\n          <DialogAdditionalActionNeeded\r\n            actionLabel=\"Retry\"\r\n            subtitle=\"If this problem repeats plase make sure your metamask is connected\"\r\n            message=\"We could not enable the ethereum network\"\r\n            handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.RetryNetwork)}\r\n            onCancel={handleClose}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return isConnected;\r\n  };\r\n\r\n  const onEthNetworkChange = async (isConnected: boolean) => {\r\n    if (!isConnected) {\r\n      return false;\r\n    }\r\n    setDialogContent(<DialogLoadingMessage message=\"Ensuring correct network ...\" onCancel={handleClose} />);\r\n    const isCorrectNetwork = await switchToEtheremNetwork(dispatch);\r\n\r\n    if (!isCorrectNetwork) {\r\n      setDialogContent(\r\n        <>\r\n          <DialogAdditionalActionNeeded\r\n            actionLabel=\"Retry\"\r\n            subtitle={null}\r\n            message=\"We could not set the correct network, please set it manually and try again\"\r\n            handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.RetryNetwork)}\r\n            onCancel={handleClose}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return isCorrectNetwork;\r\n  };\r\n\r\n  const onTextileBucket = async (isCorrectNetwork: boolean, metadataJson: TextileBucketMetadata) => {\r\n    if (!isCorrectNetwork) {\r\n      return null;\r\n    }\r\n    setDialogContent(<DialogLoadingMessage message=\"Generating textile bucket url ...\" onCancel={handleClose} />);\r\n\r\n    try {\r\n      return await generateTextileBucketUrl(metadataJson);\r\n    } catch (error) {\r\n      setDialogContent(\r\n        <>\r\n          <DialogAdditionalActionNeeded\r\n            actionLabel=\"Retry\"\r\n            subtitle={null}\r\n            message=\"Unknown Error\"\r\n            handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.RetryTextile)}\r\n            onCancel={handleClose}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const onJoinMembership = async (buckerUrl: string, communityAddress: string, credits: string) => {\r\n    if (!buckerUrl) {\r\n      return null;\r\n    }\r\n    try {\r\n      setDialogContent(\r\n        <DialogLoadingMessage\r\n          subtitle=\"This might take awhile, please be patient\"\r\n          message=\"Executing join membership smart contract ...\"\r\n          onCancel={handleClose}\r\n        />\r\n      );\r\n      return await executeCommunityContract({\r\n        url: buckerUrl,\r\n        credits,\r\n        communityAddress,\r\n      });\r\n    } catch (error) {\r\n      const message = ParseSWErrorMessage(error.data.message as string);\r\n      if (String(message).includes('Already a member')) {\r\n        setDialogContent(\r\n          <>\r\n            <DialogAdditionalActionNeeded\r\n              actionLabel=\"Connect\"\r\n              subtitle=\"Connect to SkillWallet account to see your community\"\r\n              message={message}\r\n              handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.AlreadyMember)}\r\n              onCancel={handleClose}\r\n            />\r\n          </>\r\n        );\r\n      } else if (String(message).includes('There is SkillWallet already registered for this address')) {\r\n        setDialogContent(\r\n          <>\r\n            <DialogAdditionalActionNeeded\r\n              actionLabel=\"Generate QR code\"\r\n              subtitle=\"If you have not activated you skillwallet account then you can do so by clicking generate QR Code\"\r\n              message={message}\r\n              handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.SkillWalletNotActivated)}\r\n              onCancel={handleClose}\r\n            />\r\n          </>\r\n        );\r\n      } else if (String(message).includes('There is SkillWallet to be claimed by this address')) {\r\n        setDialogContent(\r\n          <>\r\n            <DialogAdditionalActionNeeded\r\n              actionLabel=\"Claim\"\r\n              subtitle=\"You are already a member of this community, but you have not claimed it yet!\"\r\n              message={message}\r\n              handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.SkillWalletNotClaimed)}\r\n              onCancel={handleClose}\r\n            />\r\n          </>\r\n        );\r\n      } else if (String(message).includes('No free spots left')) {\r\n        setDialogContent(\r\n          <>\r\n            <DialogErrorMessage subtitle=\"Select another community and try again!\" message={message} onCancel={handleClose} />\r\n          </>\r\n        );\r\n      } else {\r\n        setDialogContent(\r\n          <>\r\n            <DialogAdditionalActionNeeded\r\n              actionLabel=\"Retry\"\r\n              subtitle=\"retry again\"\r\n              message={message}\r\n              handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.RetryJoin)}\r\n              onCancel={handleClose}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const onClaimMembership = async (communityAddress: string, hasJoinedCommunity: boolean) => {\r\n    if (!communityAddress || !hasJoinedCommunity) {\r\n      return null;\r\n    }\r\n    setDialogContent(\r\n      <DialogLoadingMessage\r\n        subtitle=\"This might take awhile, please be patient\"\r\n        message=\"Executing claim membership smart contract ...\"\r\n        onCancel={handleClose}\r\n      />\r\n    );\r\n    try {\r\n      return await claimCommunityMembershipContract(communityAddress);\r\n    } catch (error) {\r\n      const message = ParseSWErrorMessage(error.data.message.payload as string);\r\n\r\n      if (String(message).includes('There is SkillWallet already registered for this address')) {\r\n        setDialogContent(\r\n          <>\r\n            <DialogAdditionalActionNeeded\r\n              actionLabel=\"Connect\"\r\n              subtitle=\"Connect to SkillWallet account to see your community\"\r\n              message={message}\r\n              handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.AlreadyClaimed)}\r\n              onCancel={handleClose}\r\n            />\r\n          </>\r\n        );\r\n      } else {\r\n        setDialogContent(\r\n          <>\r\n            <DialogAdditionalActionNeeded\r\n              actionLabel=\"Retry\"\r\n              subtitle={null}\r\n              message={message}\r\n              handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.RetryClaim)}\r\n              onCancel={handleClose}\r\n            />\r\n          </>\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const onGetTokenId = async (communityAddress: string) => {\r\n    if (!communityAddress) {\r\n      return null;\r\n    }\r\n    setDialogContent(\r\n      <DialogLoadingMessage\r\n        subtitle=\"This might take awhile, please be patient\"\r\n        message=\"Getting your skillwallet metadata ...\"\r\n        onCancel={handleClose}\r\n      />\r\n    );\r\n    try {\r\n      return await getTokenIdContract(communityAddress);\r\n    } catch (error) {\r\n      const message = ParseSWErrorMessage(error.data.message.payload as string);\r\n      setDialogContent(\r\n        <>\r\n          <DialogAdditionalActionNeeded\r\n            actionLabel=\"Retry\"\r\n            subtitle={null}\r\n            message={message}\r\n            handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.RetryTokenId)}\r\n            onCancel={handleClose}\r\n          />\r\n        </>\r\n      );\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const onQRCodeGenerate = async (tokenId: string) => {\r\n    if (!tokenId) {\r\n      return null;\r\n    }\r\n    setDialogContent(\r\n      <DialogLoadingMessage subtitle=\"This might take awhile, please be patient\" message=\"Generating QR code ...\" onCancel={handleClose} />\r\n    );\r\n\r\n    const nonce = await generateNonce(NonceActions.Activate, tokenId);\r\n\r\n    if (!nonce) {\r\n      setDialogContent(\r\n        <>\r\n          <DialogAdditionalActionNeeded\r\n            actionLabel=\"Retry\"\r\n            subtitle={null}\r\n            message=\"QR code was not generated successfully!\"\r\n            handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.RetryNonce)}\r\n            onCancel={handleClose}\r\n          />\r\n        </>\r\n      );\r\n    } else {\r\n      setDialogContent(\r\n        <>\r\n          <Box sx={{ display: 'flex', mt: 2, p: 2, bgcolor: 'white' }}>\r\n            <QRCode\r\n              value={JSON.stringify({\r\n                tokenId,\r\n                nonce,\r\n              })}\r\n              logoWidth={140}\r\n              logoHeight={140}\r\n              bgColor=\"white\"\r\n              size={205}\r\n            />\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              px: 2,\r\n              bgcolor: 'white',\r\n              width: '230px',\r\n              height: '60px',\r\n              marginTop: '14px',\r\n            }}\r\n          >\r\n            <Typography sx={{ color: 'black', textAlign: 'center' }} component=\"div\" variant=\"body1\">\r\n              Scan with your <b>SkillWallet App</b> <br />\r\n              to claim your Membership\r\n            </Typography>\r\n          </Box>\r\n          <SwButton color=\"error\" onClick={handleClose} sx={{ mt: 4 }} label=\"Cancel\" />\r\n        </>\r\n      );\r\n    }\r\n\r\n    return nonce;\r\n  };\r\n\r\n  const onAuthenticate = async (nonce: string, tokenId: string) => {\r\n    if (!nonce || !tokenId) {\r\n      return false;\r\n    }\r\n\r\n    setDialogContent(\r\n      <DialogLoadingMessage subtitle=\"This might take awhile, please be patient\" message=\"Authenticating ....\" onCancel={handleClose} />\r\n    );\r\n\r\n    try {\r\n      const fn = () => hasPendingAuthentication(window.ethereum.selectedAddress);\r\n      const condition = ({ hasPendingAuth }) => !hasPendingAuth;\r\n      const { hasPendingAuth } = await asyncPoll<{ hasPendingAuth: boolean }>(fn, condition);\r\n      return hasPendingAuth;\r\n    } catch (error) {\r\n      setDialogContent(\r\n        <>\r\n          <DialogAdditionalActionNeeded\r\n            actionLabel=\"Retry\"\r\n            subtitle=\"Something went wrong\"\r\n            message=\"Authentication was unsuccessful\"\r\n            handleAdditionalAction={() => handleAdditionalAction(ClaimMembershipErrorTypes.RetryAuth)}\r\n            onCancel={handleClose}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  return {\r\n    onEthConnection,\r\n    onEthNetworkChange,\r\n    onTextileBucket,\r\n    onJoinMembership,\r\n    onClaimMembership,\r\n    onQRCodeGenerate,\r\n    onAuthenticate,\r\n    onGetTokenId,\r\n  };\r\n};\r\n","import { Dialog, DialogContent } from '@mui/material';\r\n\r\nexport const ClaimMembershipDialog = ({ open, handleClose, dialogContent, fullScreen = false }: any) => {\r\n  const dialogSize = fullScreen\r\n    ? {}\r\n    : {\r\n        minWidth: '400px',\r\n        minHeight: '400px',\r\n      };\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} fullScreen={fullScreen}>\r\n      <DialogContent\r\n        sx={{\r\n          ...dialogSize,\r\n          bgcolor: 'primary.main',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center',\r\n          flexDirection: 'column',\r\n        }}\r\n      >\r\n        {dialogContent}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import { Badge, Box, styled, ThemeOptions, Tooltip, Typography, useMediaQuery } from '@mui/material';\nimport { SwQuote, TokenomicsSvg, DitoCreditsSvg } from 'sw-web-shared';\nimport HelpIcon from '@mui/icons-material/Help';\nimport './community-credits.scss';\n\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\n\nconst NoBorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\n  height: '15px',\n  borderRadius: 0,\n  border: `1px solid ${theme.palette.background.paper}`,\n  [`&.${linearProgressClasses.colorPrimary}`]: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  [`& .${linearProgressClasses.bar}`]: {\n    borderRadius: 0,\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction CommunityCredits({ totalCredits, creditSkills }) {\n  const small = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.down('sm'));\n  return (\n    <Box className=\"sw-community-credits\">\n      <Typography sx={{ color: 'background.paper', textAlign: 'center', mb: 2 }} component=\"div\" variant=\"h6\">\n        DITO credits you will earn with your skills\n      </Typography>\n      <SwQuote mobile={small} mobileStartText={<p>Credits...</p>}>\n        <>\n          <Badge\n            sx={{ paddingLeft: '15px' }}\n            badgeContent={\n              <Tooltip title={<>{Number(totalCredits) - 2000} (skill credits) + 2000 (base credits)</>} arrow>\n                <HelpIcon\n                  sx={{\n                    borderRadius: '50%',\n                    fontSize: '1.2rem',\n                    position: 'absolute',\n                  }}\n                />\n              </Tooltip>\n            }\n          >\n            <Typography sx={{ color: 'background.paper', textAlign: 'start', mb: 2 }} component=\"div\" variant=\"h6\">\n              Total credits: {totalCredits}\n            </Typography>\n          </Badge>\n          {creditSkills.map(({ percentage, name, credits }, index) => {\n            return (\n              <div key={index} className=\"sw-credit-widget\">\n                <div className=\"credit-content\">\n                  <div className=\"credit-label\">\n                    <TokenomicsSvg width=\"14px\" />\n                    <Typography sx={{ color: 'background.paper', textAlign: 'start', ml: 1 }} component=\"div\" variant=\"body2\">\n                      {name}\n                    </Typography>\n                  </div>\n                  <div className=\"sw-progress-bar\">\n                    <NoBorderLinearProgress variant=\"determinate\" value={percentage} />\n                    <Typography\n                      className=\"sw-progress-bar-label\"\n                      sx={{ color: 'secondary.main', textAlign: 'center' }}\n                      component=\"span\"\n                      variant=\"body2\"\n                    >\n                      {percentage}%\n                    </Typography>\n                  </div>\n                </div>\n                <div className=\"credit-amount\">\n                  <Typography sx={{ color: 'background.paper', textAlign: 'start', mr: 1 }} component=\"div\" variant=\"body2\">\n                    {credits}\n                  </Typography>\n                  <DitoCreditsSvg width=\"14px\" />\n                </div>\n              </div>\n            );\n          })}\n        </>\n      </SwQuote>\n    </Box>\n  );\n}\n\nexport default CommunityCredits;\n","import { ResultState } from '@dito-store/status';\nimport { useAppDispatch, RootState } from '@dito-store/store.model';\nimport { getSkillWalletDescription } from '@dito-api/skillwallet.api';\nimport { TextileBucketMetadata } from 'src/api/model';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport { Box, ThemeOptions, Typography } from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { DitoLogoSvg, SwButton } from 'sw-web-shared';\n\nimport { useWeb3React } from '@web3-react/core';\nimport JoinBaseLayout from '../base/join-base';\nimport { ClaimMembershipErrorTypes, CommunityCategory } from '../store/model';\nimport './communities.scss';\nimport { fetchCommunities, getCommunity, getCredits, getFormattedSkills, getSkillCredits, selectCommunity } from '../store/join.reducer';\nimport CommunityCard from './community-card';\nimport { OnClaimMembershipHandlers } from './claim-membership-handlers';\nimport { ClaimMembershipDialog } from './claim-membership-dialog';\nimport CommunityCredits from './community-credits';\n\nconst Communities = () => {\n  const dispatch = useAppDispatch();\n  const { activate } = useWeb3React();\n\n  // responsiveness\n  const largeDevice = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.up('lg'));\n  const small = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.down('md'));\n  const extraSmall = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.down('sm'));\n\n  // selectors\n  const { isAutheticated } = useSelector((state: RootState) => state.auth);\n  const { selectedCategory } = useSelector((state: RootState) => state.joinCommunity.category);\n  const { selectedSkills } = useSelector((state: RootState) => state.joinCommunity.skills);\n  const userInfo = useSelector((state: RootState) => state.joinCommunity.userInfo);\n  const { entities, status, selectedCommunityName } = useSelector((state: RootState) => state.joinCommunity.community);\n  const selectedCommunity = useSelector(getCommunity);\n  const formattedSkills = useSelector(getFormattedSkills);\n  const credits = useSelector(getCredits);\n  const creditSkills = useSelector(getSkillCredits);\n\n  // function/local state\n  const [open, setOpen] = useState(false);\n  const [dialogContent, setDialogContent] = useState(null);\n  const [tokenId, setTokenId] = useState(null);\n  const [nonce, setNonce] = useState(null);\n\n  const handleClose = () => {\n    setOpen(false);\n    setNonce(null);\n    setTokenId(null);\n    setDialogContent(null);\n  };\n\n  const claimMembership = async () => {\n    const description = await getSkillWalletDescription();\n    const metadataJson: TextileBucketMetadata = {\n      name: `${userInfo?.name}'s SkillWallet`,\n      description,\n      image: userInfo?.avatar,\n      properties: {\n        username: userInfo?.name,\n        skills: formattedSkills,\n      },\n    };\n    setOpen(true);\n    const {\n      onEthConnection,\n      onEthNetworkChange,\n      onGetTokenId,\n      onTextileBucket,\n      onJoinMembership,\n      onClaimMembership,\n      onQRCodeGenerate,\n      onAuthenticate,\n    } = OnClaimMembershipHandlers(dispatch, setDialogContent, handleClose, async (message: ClaimMembershipErrorTypes) => {\n      switch (message) {\n        case ClaimMembershipErrorTypes.AlreadyMember:\n          handleClose();\n          break;\n        case ClaimMembershipErrorTypes.SkillWalletNotActivated:\n        case ClaimMembershipErrorTypes.AlreadyClaimed:\n        case ClaimMembershipErrorTypes.RetryNonce:\n          setTokenId(await onGetTokenId(selectedCommunity.address));\n          setNonce(await onQRCodeGenerate(tokenId));\n          await onAuthenticate(nonce, tokenId);\n          break;\n        case ClaimMembershipErrorTypes.SkillWalletNotClaimed:\n        case ClaimMembershipErrorTypes.RetryClaim:\n          await onClaimMembership(selectedCommunity.address, true);\n          setTokenId(await onGetTokenId(selectedCommunity.address));\n          console.log('TokenId: ', tokenId);\n          setNonce(await onQRCodeGenerate(tokenId));\n          console.log('Nonce: ', nonce);\n          await onAuthenticate(nonce, tokenId);\n          break;\n        case ClaimMembershipErrorTypes.RetryAuth:\n          await onAuthenticate(nonce, tokenId);\n          break;\n        case ClaimMembershipErrorTypes.RetryJoin:\n        case ClaimMembershipErrorTypes.RetryNetwork:\n        case ClaimMembershipErrorTypes.RetryTextile:\n          setNonce(null);\n          setTokenId(null);\n          setDialogContent(null);\n          claimMembership();\n          break;\n        default:\n          console.error('Not handled!');\n      }\n    });\n\n    /*\n        Step 1 - Connect to ethereum / metamask\n    */\n    const isConnected = await onEthConnection(activate);\n    console.log('IsConnected: ', isConnected);\n\n    /*\n        Step 2 - Change to correct ethereum network\n    */\n    const isCorrectNetwork = await onEthNetworkChange(isConnected);\n    console.log('IsCorrectNetwork: ', isConnected);\n\n    /*\n        Step 3 - Store image & join community flow metadata to textile bucket\n    */\n    const bucketUrl = await onTextileBucket(isCorrectNetwork, metadataJson);\n    console.log('BucketUrl: ', bucketUrl);\n\n    /*\n        Step 4 - Execute join membership smart contract\n    */\n    const member = await onJoinMembership(bucketUrl, selectedCommunity.address, credits);\n    setTokenId(member?.tokenId);\n    console.log('Member: ', member);\n    console.log('TokenId: ', tokenId);\n\n    /*\n        Step 5 - Execute claim membership smart contract\n    */\n    await onClaimMembership(selectedCommunity.address, !!member);\n\n    /*\n        Step 6 - Generate nonce & show qr code\n    */\n    setNonce(await onQRCodeGenerate(tokenId));\n    console.log('Nonce: ', nonce);\n\n    /*\n        Step 7 - Poll until skillwallet is authenticated\n    */\n    const isAuthenticated = await onAuthenticate(nonce, tokenId);\n    console.log('IsAuthenticated: ', isAuthenticated);\n\n    /*\n        Step 8 - Go to success screen\n    */\n    // TODO: Implement success navigation\n  };\n\n  useEffect(() => {\n    if (selectedSkills.length && selectedCategory) {\n      dispatch(fetchCommunities(selectedCategory));\n    }\n  }, [dispatch, selectedCategory, selectedSkills]);\n\n  useEffect(() => {\n    if (isAutheticated) {\n      handleClose();\n    }\n  }, [dispatch, isAutheticated]);\n\n  return (\n    <>\n      <ClaimMembershipDialog fullScreen={extraSmall} open={open} onClose={() => setOpen(false)} dialogContent={dialogContent} />\n      <JoinBaseLayout\n        status={status}\n        className=\"sw-communities-container\"\n        left={\n          <>\n            <Box className=\"sw-box-logo\">\n              <DitoLogoSvg width={largeDevice ? '100px' : '80px'} />\n            </Box>\n            <CommunityCredits totalCredits={credits} creditSkills={creditSkills} />\n          </>\n        }\n        right={\n          <div className=\"sw-communties-wrapper\">\n            <Typography sx={{ color: 'background.paper', textAlign: 'center', pb: 2 }} component=\"div\" variant=\"h6\">\n              Here is a few comminities for you (Based on your Skills). Choose one that inspires you the most & start adding Value to it\n            </Typography>\n            {selectedCategory && selectedSkills.length ? (\n              !entities?.length ? (\n                <Typography sx={{ color: 'background.paper', textAlign: 'center', pb: 2, mt: 4 }} component=\"div\" variant=\"h6\">\n                  We could not find any communities for {selectedCategory} category, please go back and select a different category!\n                </Typography>\n              ) : (\n                entities.map((community: CommunityCategory, index) => (\n                  <CommunityCard\n                    onSelect={(name) => dispatch(selectCommunity(name))}\n                    selectedCommunityName={selectedCommunityName}\n                    community={community}\n                    key={`community-${index}`}\n                  />\n                ))\n              )\n            ) : (\n              <Typography\n                className=\"no-item-selected\"\n                sx={{ color: 'background.paper', textAlign: 'center', pb: 2 }}\n                component=\"div\"\n                variant=\"h6\"\n              >\n                No skills were selected, go back and select some skills before selecting a community\n              </Typography>\n            )}\n          </div>\n        }\n        prevBtn={<SwButton startIcon={<NavigateBeforeIcon />} component={Link} to=\"/join-community/skills\" label=\"Prev\" />}\n        nextBtn={\n          <SwButton\n            disabled={selectedCommunityName === null || status === ResultState.Loading}\n            endIcon={<NavigateNextIcon />}\n            onClick={() => claimMembership()}\n            to=\"/join-community/Community\"\n            label={small ? 'Next' : 'Next: Claim your membership'}\n          />\n        }\n      />\n    </>\n  );\n};\n\nexport default Communities;\n","import NavigateNextIcon from '@mui/icons-material/NavigateNext';\r\nimport { Box, TextField, ThemeOptions, Typography } from '@mui/material';\r\nimport { RootState } from '@dito-store/store.model';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { DitoLogoSvg, SwButton, SwQuote, SwUploadFile } from 'sw-web-shared';\r\n\r\nimport { toBase64 } from '@dito-utils/to-base-64';\r\nimport { ResultState } from '@dito-store/status';\r\nimport { useEffect, useMemo } from 'react';\r\nimport debounce from 'lodash.debounce';\r\nimport JoinBaseLayout from '../base/join-base';\r\n\r\nimport './user-info.scss';\r\n\r\nimport { updateAvatarUrl, updateName } from '../store/join.reducer';\r\n\r\nconst UserInfo = () => {\r\n  const largeDevice = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.up('lg'));\r\n  const small = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.down('md'));\r\n\r\n  const dispatch = useDispatch();\r\n  const { name, avatar } = useSelector((state: RootState) => state.joinCommunity.userInfo);\r\n\r\n  const debouncedChangeHandler = useMemo(() => {\r\n    const changeHandler = (e) => {\r\n      console.error('Error', 'error');\r\n      dispatch(updateName(e.target.value));\r\n    };\r\n    return debounce(changeHandler, 300);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    return () => debouncedChangeHandler.cancel();\r\n  }, [debouncedChangeHandler]);\r\n\r\n  return (\r\n    <JoinBaseLayout\r\n      status={ResultState.Idle}\r\n      className=\"sw-user-info-container\"\r\n      left={\r\n        <>\r\n          <Box className=\"sw-box-logo\">\r\n            <DitoLogoSvg width={largeDevice ? '100px' : '80px'} />\r\n          </Box>\r\n\r\n          <SwQuote mobile={small} mobileStartText={<p>Have you ever thought...</p>}>\r\n            <>\r\n              <p>\r\n                Have you ever thought, <br />\r\n                \"I would like to contribute, but ...\"\r\n              </p>\r\n              <p className=\"mt-4 mb-4\">Distributed Town (DiTo) lets you create or join a community with one click.</p>\r\n\r\n              <p>Just select what you are best at - and we will match with the best communities that need you the most.</p>\r\n            </>\r\n          </SwQuote>\r\n        </>\r\n      }\r\n      right={\r\n        <div className=\"sw-user-info-wrapper\">\r\n          <Typography sx={{ color: 'background.paper', textAlign: 'center', pb: 2 }} component=\"div\" variant=\"h6\">\r\n            Personal information\r\n          </Typography>\r\n\r\n          <div className=\"sw-form-field\">\r\n            <Typography sx={{ color: 'background.paper', mb: 1 }} component=\"div\" variant=\"body1\">\r\n              Nickname\r\n            </Typography>\r\n            <div className=\"sw-form-field-content\">\r\n              <Typography sx={{ color: 'background.paper' }} component=\"div\" variant=\"body2\">\r\n                How would you like your comminity to call you ?\r\n              </Typography>\r\n              <TextField\r\n                autoFocus\r\n                defaultValue={name}\r\n                inputProps={{ maxLength: 20 }}\r\n                onChange={debouncedChangeHandler}\r\n                helperText={\r\n                  <Typography sx={{ color: 'secondary.main' }} component=\"span\" variant=\"body2\">\r\n                    Max characters 20\r\n                  </Typography>\r\n                }\r\n                variant=\"standard\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"sw-form-field\">\r\n            <Typography sx={{ color: 'background.paper', mb: 1 }} component=\"div\" variant=\"body1\">\r\n              Avatar\r\n            </Typography>\r\n            <div className=\"sw-form-field-content sw-image-upload\">\r\n              <Typography sx={{ color: 'background.paper' }} component=\"div\" variant=\"body2\">\r\n                A public image - that's how others will see you.\r\n              </Typography>\r\n              <SwUploadFile\r\n                initialPreviewUrl={avatar}\r\n                fileChange={async (file: File) => {\r\n                  if (file) {\r\n                    const base64 = await toBase64(file);\r\n                    dispatch(updateAvatarUrl(base64));\r\n                  } else {\r\n                    dispatch(updateAvatarUrl(null));\r\n                  }\r\n                }}\r\n                sx={{\r\n                  width: '60px',\r\n                  height: '60px',\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n      prevBtn={null}\r\n      nextBtn={\r\n        <SwButton\r\n          endIcon={<NavigateNextIcon />}\r\n          component={Link}\r\n          to=\"/join-community/categories\"\r\n          disabled={!name || !avatar}\r\n          label={small ? 'Next' : 'Next: Pick your category'}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route } from 'react-router-dom';\n\nimport Categories from './categories/categories';\nimport Skills from './skills/skills';\nimport { resetJoinCommunityState } from './store/join.reducer';\nimport './join.scss';\nimport Communities from './communities/communities';\nimport UserInfo from './user-info/user-info';\n\nconst Join = (props) => {\n  console.log('joinProps', props);\n  const dispatch = useDispatch();\n  useEffect(\n    () => () => {\n      dispatch(resetJoinCommunityState());\n    },\n    [dispatch]\n  );\n  return (\n    <div className=\"sw-join-community-container\">\n      <Route path=\"/join-community/user-info\" component={UserInfo} {...props} />\n      <Route path=\"/join-community/categories\" component={Categories} {...props} />\n      <Route path=\"/join-community/skills\" component={Skills} {...props} />\n      <Route path=\"/join-community/communities\" component={Communities} {...props} />\n    </div>\n  );\n};\n\nexport default Join;\n","import HelpIcon from '@mui/icons-material/Help';\nimport { Badge, Box, ThemeOptions, Tooltip, Typography } from '@mui/material';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { Link } from 'react-router-dom';\nimport { DitoLogoSvg, SwButton, SwDivider, SwQuote } from 'sw-web-shared';\nimport './get-started.scss';\n\nconst GetStarted = () => {\n  const largeDevice = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.up('lg'));\n  const small = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.down('md'));\n\n  return (\n    <div className=\"sw-get-started-container\">\n      <Box sx={{ p: 0, m: 0 }} className=\"sw-box\">\n        <Box className=\"sw-box-logo\">\n          <DitoLogoSvg width={largeDevice ? '100px' : '80px'} />\n        </Box>\n\n        <SwQuote mobile={small} mobileStartText={<p>is a new financial...</p>}>\n          <>\n            <p>\n              <strong>Distributed Town</strong> is a new financial infrastructure for public goods, designed for the real world.\n            </p>\n            <p>\n              It’s built upon mutual, collaborative economics between individuals and communities - and a universal identity management\n              based on skills, rather than personal data.\n            </p>\n          </>\n        </SwQuote>\n      </Box>\n      <SwDivider orientation={largeDevice ? 'vertical' : 'horizontal'} />\n      <Box sx={{ p: 0, m: 0 }} className=\"sw-box\">\n        <Box className=\"sw-box-title\">\n          <Typography color=\"text.primary\" component=\"div\" variant={largeDevice ? 'h4' : 'h5'}>\n            This is <span className=\"underline\">your Community</span>\n          </Typography>\n        </Box>\n        <Box className=\"sw-box-actions\">\n          <SwButton label=\"Join a community\" component={Link} to=\"/join-community/user-info\" />\n          <Badge\n            badgeContent={\n              <Tooltip title=\"Coming soon!\" arrow>\n                <HelpIcon\n                  sx={{\n                    bgcolor: 'text.primary',\n                    borderRadius: '50%',\n                    fontSize: '1.2rem',\n                    position: 'absolute',\n                  }}\n                />\n              </Tooltip>\n            }\n          >\n            <SwButton disabled label=\"Create\" component={Link} to=\"/community/create\" />\n          </Badge>\n        </Box>\n      </Box>\n    </div>\n  );\n};\n\nexport default GetStarted;\n","import React, { useEffect, useState } from 'react';\n\nimport './App.scss';\nimport SvgIcon from '@mui/material/SvgIcon';\nimport { defineCustomElements } from '@skill-wallet/auth/loader';\nimport { renderToStaticMarkup } from 'react-dom/server';\nimport { withRouter, Route } from 'react-router-dom';\nimport { SwLayout, MainBackgroundSvg, JoinSelSvg, SwSidebar, DitoLogoSvg, SwButton } from 'sw-web-shared';\n\nimport { useSelector } from 'react-redux';\nimport { RootState, useAppDispatch } from '@dito-store/store.model';\nimport Web3Provider from '@dito-auth/Web3Provider';\nimport Web3jsComponent from '@dito-auth/Web3jsComponent';\nimport SWSnackbar from '@dito-components/snackbar';\nimport { LogsDialog } from '@dito-components/logs-dialog';\nimport { useMediaQuery, ThemeOptions } from '@mui/material';\nimport { addLog } from '@dito-store/ui-reducer';\nimport Community from './pages/community/community';\nimport Join from './pages/community/join/join';\nimport GetStarted from './pages/get-started/get-started';\nimport { resetAuthState, setAuthenticated } from './auth/auth.reducer';\n\nconst svgString = encodeURIComponent(renderToStaticMarkup(<MainBackgroundSvg />));\n\nfunction Home() {\n  return <h2 style={{ color: 'white' }}>Test</h2>;\n}\n\nconst LoadingMessage = () => (\n  <div className=\"app-loading\">\n    <DitoLogoSvg width=\"80\" height=\"80\" />\n  </div>\n);\n\nconst PrivateRoutes: React.FC = (props: any) => {\n  const { path } = props.match;\n  return (\n    <>\n      <Route path={`${path}/community`} component={Community} {...props} />\n      <Route path={`${path}/notifications`} component={Home} {...props} />\n    </>\n  );\n};\n\nconst AuthRoutes: React.FC = (props: any) => {\n  return (\n    <>\n      <Route exact component={GetStarted} path=\"/\" {...props} />\n      <Route component={Join} path=\"/join-community\" {...props} />\n    </>\n  );\n};\n\nconst originalConsoleError = console.error;\n\nconst App = (props: any) => {\n  const dispatch = useAppDispatch();\n  const [isLoading, setLoading] = useState(true);\n  const [logInitialized, setLogInitialized] = useState(false);\n  const [open, setOpen] = useState(false);\n  const small = useMediaQuery((theme: ThemeOptions) => theme.breakpoints.down('sm'));\n\n  const { isAutheticated } = useSelector((state: RootState) => state.auth);\n  const { logs } = useSelector((state: RootState) => state.ui);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    if (logInitialized) {\n      return;\n    }\n    setLogInitialized(true);\n    console.error = function (...args) {\n      // eslint-disable-next-line prefer-rest-params\n      dispatch(addLog(args));\n      // handle arguments\n      // eslint-disable-next-line prefer-rest-params\n      originalConsoleError.apply(console, arguments);\n    };\n  }, [logInitialized, dispatch]);\n\n  useEffect(() => {\n    const onSWLogin = async () => {\n      setLoading(false);\n      dispatch(setAuthenticated(true));\n    };\n    defineCustomElements(window);\n    window.addEventListener('onSkillwalletLogin', onSWLogin);\n\n    // temporary\n    const timeout = setTimeout(() => {\n      if (!isAutheticated) {\n        setLoading(false);\n      }\n    }, 2000);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('onSkillwalletLogin', onSWLogin);\n    };\n  }, [isAutheticated, dispatch]);\n\n  const menuItems: any[] = [\n    {\n      type: 'href',\n      label: 'SkillWallet',\n      href: '/community/skillwallet',\n      icon: <SvgIcon component={JoinSelSvg} />,\n    },\n    {\n      type: 'href',\n      label: 'dTown Hall',\n      href: '/community/dTown-hall',\n      icon: <SvgIcon component={JoinSelSvg} />,\n    },\n    {\n      type: 'href',\n      label: 'Notifications',\n      href: '/community/notifications',\n      icon: <SvgIcon component={JoinSelSvg} />,\n    },\n    {\n      type: 'href',\n      label: 'Settings',\n      href: '/community/settings',\n      icon: <SvgIcon component={JoinSelSvg} />,\n    },\n    {\n      type: 'divider',\n    },\n    {\n      label: 'Log off',\n      type: 'button',\n      onClick: () => {\n        localStorage.removeItem('skillWallet');\n        dispatch(resetAuthState());\n        props.history.push('/');\n        window.location.reload();\n      },\n      icon: <SvgIcon component={JoinSelSvg} />,\n    },\n  ];\n\n  return (\n    <Web3Provider>\n      <Web3jsComponent>\n        <>\n          <LogsDialog open={open} handleClose={handleClose} logs={logs} fullScreen={small} />\n          <SWSnackbar />\n          <SwLayout\n            className={isLoading ? 'loading' : ''}\n            top={\n              <div\n                className=\"wallet-btn\"\n                style={{\n                  display: 'flex',\n                  visibility: isLoading ? 'hidden' : 'visible',\n                }}\n              >\n                {/* @ts-ignore */}\n                <skillwallet-auth allowCreateNewUser={false} id=\"walletButton\" />\n                <SwButton sx={{ height: '33px', ml: 2 }} label=\"Open logs\" onClick={() => setOpen(true)} />\n              </div>\n            }\n            backgroundUrl={`url('data:image/svg+xml;utf8, ${svgString}')`}\n            drawer={isAutheticated && <SwSidebar sidebarTop={<DitoLogoSvg width=\"100\" height=\"100\" />} open menuItems={menuItems} />}\n          >\n            {isLoading ? <LoadingMessage /> : isAutheticated ? <PrivateRoutes {...props} /> : <AuthRoutes {...props} />}\n          </SwLayout>\n        </>\n      </Web3jsComponent>\n    </Web3Provider>\n  );\n};\n\nexport default withRouter(App);\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport { combineReducers } from 'redux';\r\nimport { persistReducer, PersistConfig } from 'redux-persist';\r\nimport authSliceReducer from '../auth/auth.reducer';\r\nimport joinCommunitySliceReducer from '../pages/community/join/store/join.reducer';\r\nimport uiSliceReducer from './ui-reducer';\r\n\r\nconst persistConfig: PersistConfig<any> = {\r\n  key: 'appState',\r\n  storage,\r\n  stateReconciler: autoMergeLevel2,\r\n  blacklist: ['auth'],\r\n};\r\n\r\nconst reducers = combineReducers({\r\n  joinCommunity: joinCommunitySliceReducer,\r\n  auth: authSliceReducer,\r\n  ui: uiSliceReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducers);\r\n\r\nexport const store = configureStore({\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }).concat(logger),\r\n  reducer: persistedReducer,\r\n});\r\n\r\nexport default store;\r\n","import './index.css';\nimport { createTheme, StyledEngineProvider, ThemeOptions, ThemeProvider } from '@mui/material/styles';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\n\nconst persistor = persistStore(store);\n\nconst theme = createTheme({\n  components: {\n    MuiUseMediaQuery: {\n      defaultProps: {\n        noSsr: true,\n      },\n    },\n    MuiDialogContent: {\n      styleOverrides: {\n        root: {\n          borderStyle: 'solid',\n          borderWidth: '1px',\n          borderColor: 'text.primary',\n        },\n      },\n    },\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n  palette: {\n    type: 'dark',\n    text: {\n      primary: '#fff',\n      // secondary: \"rgba(255, 255, 255, 0.7)\",\n    },\n    primary: {\n      main: '#161615',\n    },\n    secondary: {\n      main: '#D8D8D8',\n    },\n    // background: {\n    //   default: \"#161615\",\n    //   paper: \"#D8D8D8\",\n    // },\n  },\n  shape: {\n    borderRadius: 0,\n  },\n  typography: {\n    fontFamily: ['Josefin Sans', ' sans-serif'].join(','),\n  },\n} as ThemeOptions);\n\nReactDOM.render(\n  <StyledEngineProvider injectFirst>\n    <ThemeProvider theme={theme}>\n      <Router basename=\"/distributed-town-web\">\n        <Provider store={store}>\n          <PersistGate persistor={persistor}>\n            <App />\n          </PersistGate>\n        </Provider>\n      </Router>\n    </ThemeProvider>\n  </StyledEngineProvider>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}